b'Problem\nRead problem statements in Hindi, Bengali, Mandarin Chinese, Russian, and Vietnamese as well.\nLet SSS be a set of NNN boolean variables X1,X2,\xe2\x80\xa6,XNX_1, X_2, \\ldots, X_NX1\xe2\x80\x8b,X2\xe2\x80\x8b,\xe2\x80\xa6,XN\xe2\x80\x8b and their negations \xc2\xacX1,\xc2\xacX2,\xe2\x80\xa6,\xc2\xacXN\\neg X_1, \\neg X_2, \\ldots, \\neg X_N\xc2\xacX1\xe2\x80\x8b,\xc2\xacX2\xe2\x80\x8b,\xe2\x80\xa6,\xc2\xacXN\xe2\x80\x8b. You are given the initial values of all variables.\nA 2-CNF boolean expression is defined as a conjunction of clauses, where each clause is a disjunction of two elements of the set SSS. Ada constructed a 2-CNF boolean expression BBB with MMM clauses as follows:\n\nFirst, Ada painted each of the variables X1,X2,\xe2\x80\xa6,XNX_1, X_2, \\ldots, X_NX1\xe2\x80\x8b,X2\xe2\x80\x8b,\xe2\x80\xa6,XN\xe2\x80\x8b with one colour \xe2\x80\x95 either red or black.\nThen, she painted the negated variables \xe2\x80\x95 for each valid iii, if XiX_iXi\xe2\x80\x8b is painted red, then \xc2\xacXi\\neg X_i\xc2\xacXi\xe2\x80\x8b is painted black, and vice versa (if XiX_iXi\xe2\x80\x8b is black, \xc2\xacXi\\neg X_i\xc2\xacXi\xe2\x80\x8b is painted red).\nFinally, she wrote the boolean expression B=(P1\xe2\x88\xa8Q1)\xe2\x88\xa7(P2\xe2\x88\xa8Q2)\xe2\x88\xa7\xe2\x80\xa6\xe2\x88\xa7(PM\xe2\x88\xa8QM)B = (P_1 \\lor Q_1) \\wedge (P_2 \\lor Q_2) \\wedge \\ldots \\wedge (P_M \\lor Q_M)B=(P1\xe2\x80\x8b\xe2\x88\xa8Q1\xe2\x80\x8b)\xe2\x88\xa7(P2\xe2\x80\x8b\xe2\x88\xa8Q2\xe2\x80\x8b)\xe2\x88\xa7\xe2\x80\xa6\xe2\x88\xa7(PM\xe2\x80\x8b\xe2\x88\xa8QM\xe2\x80\x8b), in such a way that no clause contains two variables with the same colour and Pi\xe2\x89\xa0\xc2\xacQiP_i \\neq \\neg Q_iPi\xe2\x80\x8b\xee\x80\xa0=\xc2\xacQi\xe2\x80\x8b for each clause.\n\nAda wants the expression to evaluate to "true". In order to achieve that, she may change the values of variables; for each valid iii, the cost of changing the value of XiX_iXi\xe2\x80\x8b (from "true" to "false" or vice versa) is CiC_iCi\xe2\x80\x8b. Find the minimum total cost needed to make the expression BBB evaluate to "true" or determine that it is impossible.\nNote that you are not given the colours of variables, but it is guaranteed that the expression BBB is chosen in such a way that there is at least one valid way to assign colours and the minimum cost is the same for each valid assignment of colours.\nInput\n\nThe first line of the input contains a single integer TTT denoting the number of test cases. The description of TTT test cases follows.\nThe first line of each test case contains two space-separated integers NNN and MMM.\nThe second line contains a binary string SSS with length NNN describing the initial values of the variables. For each valid iii, the iii-th character of SSS is \'1\' if XiX_iXi\xe2\x80\x8b is true or \'0\' if XiX_iXi\xe2\x80\x8b is false.\nThe third line contains NNN space-separated integers C1,C2,\xe2\x80\xa6,CNC_1, C_2, \\ldots, C_NC1\xe2\x80\x8b,C2\xe2\x80\x8b,\xe2\x80\xa6,CN\xe2\x80\x8b.\nMMM lines follow. For each valid iii, the iii-th of these lines contains two space-separated integers PiP_iPi\xe2\x80\x8b and QiQ_iQi\xe2\x80\x8b. For each valid iii, the variable XiX_iXi\xe2\x80\x8b is represented by the integer iii and its negation is represented by \xe2\x88\x92i-i\xe2\x88\x92i.\n\nOutput\nFor each test case, print a single line containing one integer \xe2\x80\x95 the minimum cost needed to make the boolean expression evaluate to "true", or \xe2\x88\x921-1\xe2\x88\x921 if it is impossible.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa41051 \\le T \\le 10^51\xe2\x89\xa4T\xe2\x89\xa4105\n1\xe2\x89\xa4N\xe2\x89\xa42561 \\le N \\le 2561\xe2\x89\xa4N\xe2\x89\xa4256\n1\xe2\x89\xa4Ci\xe2\x89\xa42561 \\le C_i \\le 2561\xe2\x89\xa4Ci\xe2\x80\x8b\xe2\x89\xa4256 for each valid iii\n1\xe2\x89\xa4\xe2\x88\xa3Pi\xe2\x88\xa3,\xe2\x88\xa3Qi\xe2\x88\xa3\xe2\x89\xa4N1 \\le |P_i|, |Q_i| \\le N1\xe2\x89\xa4\xe2\x88\xa3Pi\xe2\x80\x8b\xe2\x88\xa3,\xe2\x88\xa3Qi\xe2\x80\x8b\xe2\x88\xa3\xe2\x89\xa4N for each valid iii\neach character of SSS is either \'0\' or \'1\'\nthe sum of MMM over all test cases does not exceed 43,21043,21043,210\n\nSubtasks\nSubtask #1 (1 points): N\xe2\x89\xa410N \\le 10N\xe2\x89\xa410\nSubtask #2 (99 points): original constraints\nSample 1:\nInputOutput1\n3 3\n101\n1 2 3\n-1 -2\n-1 -3\n2 13\nExplanation:\nExample case 1: The expression BBB is (\xc2\xacX1\xe2\x88\xa8\xc2\xacX2)\xe2\x88\xa7(\xc2\xacX1\xe2\x88\xa8\xc2\xacX3)\xe2\x88\xa7(X2\xe2\x88\xa8X1)(\\neg X_1 \\lor \\neg X_2) \\wedge (\\neg X_1 \\lor \\neg X_3) \\wedge (X_2 \\lor X_1)(\xc2\xacX1\xe2\x80\x8b\xe2\x88\xa8\xc2\xacX2\xe2\x80\x8b)\xe2\x88\xa7(\xc2\xacX1\xe2\x80\x8b\xe2\x88\xa8\xc2\xacX3\xe2\x80\x8b)\xe2\x88\xa7(X2\xe2\x80\x8b\xe2\x88\xa8X1\xe2\x80\x8b). Ada generated this expression by painting X2X_2X2\xe2\x80\x8b and X3X_3X3\xe2\x80\x8b in red and X1X_1X1\xe2\x80\x8b in black.\nOne optimal way to make the expression true is changing the value of X3X_3X3\xe2\x80\x8b.'