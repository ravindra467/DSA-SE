b"Problem\nHash functions are primarily used to generate fixed-length output data that acts as a shortened reference to the original data. This is useful when the original data is too cumbersome to use in its entirety.One practical use is a data structure called a hash table where the data is stored associatively. Searching linearly for a person's name in a list becomes cumbersome as the length of the list increases, but the hashed value can be used to store a reference to the original data and retrieve constant time (barring collisions).\nIt involves mapping an element into a numerical value using some mathematical function. In this problem we will consider a simple hash system. It involves assigning numerical value to the alphabets and summing these values of the characters.\n\xc2\xa0For example, the string \xe2\x80\x9cacm\xe2\x80\x9d is mapped to 1+3+13=171 + 3 + 13 = 171+3+13=17. Unfortunately, this method does not give one-to-one mapping. The string \xe2\x80\x9cadl\xe2\x80\x9d also maps to 171717 (1+4+12)(1 + 4 + 12)(1+4+12). This is called collision.\nIn this problem you will have to find the number of strings of length L, which maps to an integer SSS, using the above hash function. You have to consider strings that have only lowercase letters and uppercase letters in strictly ascending order.\xc2\xa0\nNB: all lowercase letters are smaller than all uppercase letters: Example: \xe2\x80\x98z\xe2\x80\x99 < \xe2\x80\x98A\xe2\x80\x99\nSuppose L=3L = 3L=3 and S=10S = 10S=10, there are 444 such strings:(abg , acf , ade , bce )\nagb also produces 10 but the letters are not strictly in ascending order.\nbh also produces 101010 but it has 222 letters.\nInput\n\nThe first line of input contains a integer TTT, (T\xe2\x89\xa4100)(T \\le 100)(T\xe2\x89\xa4100) which denotes the number of test case.\nEach case consists of 222 integers LLL and SSS ( 0 &lt; L , S \\lt 100000 )\n\nOutput\nFor each case, print the case number followed by the expected answer.\nSample Input:\n3 \n2 10\n27 100\n5 19\n\nSample Output:\nCase 1: 4\nCase 2: 0\nCase 3: 5\n"