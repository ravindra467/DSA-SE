b'Problem\nYou have a rooted tree consisting of nnn vertices. There are some weights on each edge of the tree denoted by WiW_iWi\xe2\x80\x8b. The tree root is a vertex with number 111.\nIn this problem, you need to answer QQQ queries. Each query is described by three values uuu, vvv, and xxx. It is guaranteed that subtrees of node uuu and node vvv are disjoint. You are allowed to add at most one edge of weight xxx between any node in the subtree of uuu and any node in the subtree of vvv. Find the maximummaximummaximum weighted path between uuu and vvv given that each node can occur only once in a path.\nA subtree of some vertex is a subgraph containing that vertex and all its descendants.\nInput:\n\nFirst line will contain TTT, number of testcases. Then the testcases follow.\nFirst line of each testcase will contain NNN and QQQ, number of nodes and queries respectively.\nNext NNN \xe2\x88\x92\xe2\x88\x92\xe2\x88\x92 111 lines contain three integers uuu, vvv and WiW_iWi\xe2\x80\x8b representing an edge between nodes uuu and vvv of weight WiW_iWi\xe2\x80\x8b.\nThe next QQQ lines contain three integers uuu, vvv and xxx as explained in the problem statement.\n\nOutput:\nFor each query, output in a single line the maximummaximummaximum weighted path.\nConstraints:\n\n1\xe2\x89\xa4T\xe2\x89\xa451 \\leq T \\leq 51\xe2\x89\xa4T\xe2\x89\xa45\n1\xe2\x89\xa4n,q\xe2\x89\xa42\xe2\x88\x971051 \\leq n, q \\leq 2 * 10^51\xe2\x89\xa4n,q\xe2\x89\xa42\xe2\x88\x97105\n1\xe2\x89\xa4u,v\xe2\x89\xa4n1 \\leq u , v \\leq n1\xe2\x89\xa4u,v\xe2\x89\xa4n\n1\xe2\x89\xa4abs(Wi),x\xe2\x89\xa41091 \\leq abs(W_i), x \\leq 10^91\xe2\x89\xa4abs(Wi\xe2\x80\x8b),x\xe2\x89\xa4109\n\nSubtasks\n\n20 points : 1\xe2\x89\xa4n,q\xe2\x89\xa410001 \\leq n, q \\leq 10001\xe2\x89\xa4n,q\xe2\x89\xa41000\n80 points : 1\xe2\x89\xa4n,q\xe2\x89\xa42\xe2\x88\x971051 \\leq n, q \\leq 2 * 10^51\xe2\x89\xa4n,q\xe2\x89\xa42\xe2\x88\x97105\n\nSample Input:\n1\n7 3\n1 2 1\n1 3 -2\n2 4 3\n2 5 -4\n5 7 5\n3 6 6\n2 3 1\n5 4 2\n5 6 0\n\nSample Output:\n10\n7\n5\n\nExplanation:\n\nQuery 1 : Its  optimal to add a edge between nodes 4 and 6 making a path 2 -> 4 -> 6 -> 3  with a weight of 3 + 1 + 6 = 10.'