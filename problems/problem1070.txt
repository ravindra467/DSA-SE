b'Problem\nYou have a binary string SSS of length NNN.\nYou must perform the following operation on the binary string SSS exactly once:\n\nChoose two integers LLL and RRR (1\xe2\x89\xa4L\xe2\x89\xa4R\xe2\x89\xa4N)(1 \\le L \\le R \\le N)(1\xe2\x89\xa4L\xe2\x89\xa4R\xe2\x89\xa4N) and invert the substring SL\xe2\x80\xa6RS_{L \\dots R}SL\xe2\x80\xa6R\xe2\x80\x8b (i.e change 111 to 000 and change 000 to 111).\n\nDetermine whether you can make the number of zeroes in SSS equal to number of ones in SSS by performing the above operation exactly once. If there exists a way, also output the bounds of the chosen substring.\nInput Format\n\nThe first line contains a single integer TTT \xe2\x80\x94 the number of test cases.\nThe first line of each test case contains a single integer NNN \xe2\x80\x94 the length of string SSS.\nThe second line of each test case contains a binary string SSS of length NNN.\n\nOutput Format\nFor each test case, output NO if there is no way to make the number of zeroes equal to number of ones.\nOtherwise, output YES. In the next line, output two integers LLL and RRR (1\xe2\x89\xa4L\xe2\x89\xa4R\xe2\x89\xa4N)(1 \\le L \\le R \\le N)(1\xe2\x89\xa4L\xe2\x89\xa4R\xe2\x89\xa4N) \xe2\x80\x94 bounds of the chosen substring. If there are multiple answers, print any.\nYou may print each character of YES and NO in uppercase or lowercase (for example, yes, yEs, Yes will be considered identical).\nConstraints\n\n\n1\xe2\x89\xa4T\xe2\x89\xa4100001 \xe2\x89\xa4 T \xe2\x89\xa4 100001\xe2\x89\xa4T\xe2\x89\xa410000\n1\xe2\x89\xa4N\xe2\x89\xa41051 \xe2\x89\xa4 N \xe2\x89\xa4 10^51\xe2\x89\xa4N\xe2\x89\xa4105\nSSS is a binary string, i.e, contains only characters 000 and 111\nSum of NNN over all test cases does not exceed 2\xe2\x8b\x851052 \\cdot 10^52\xe2\x8b\x85105.\n\n\nSample 1:\nInputOutput3\n2\n01\n3\n010\n4\n1000YES\n1 2\nNO\nYES\n4 4\nExplanation:\nTest case 1: We can pick L=1L = 1L=1 and R=2R = 2R=2 to obtain: 01\xe2\x80\xbe\xe2\x86\x9210\\underline{01} \\rightarrow 1001\xe2\x80\x8b\xe2\x86\x9210, which contains equal number of zeroes and ones.\nTest case 2: It can be proven that there is no way to make the number of zeroes equal to number of ones.\nTest case 3: We can pick L=4L = 4L=4 and R=4R = 4R=4 to obtain: 1000\xe2\x80\xbe\xe2\x86\x921001100\\underline{0} \\rightarrow 10011000\xe2\x80\x8b\xe2\x86\x921001, which contains equal number of zeroes and ones.'