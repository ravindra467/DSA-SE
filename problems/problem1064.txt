b'Problem\nChef has a string SSS consisting only of English lowercase letters (a - z). However, Hitesh does not like it and wants it to be reversed.\nHitesh wonders what is the minimum number of operations required to reverse the string SSS using the following operation:\n\nSelect any iii such that 1\xe2\x89\xa4i\xe2\x89\xa4\xe2\x88\xa3S\xe2\x88\xa31 \\le i \\le \\lvert S \\rvert1\xe2\x89\xa4i\xe2\x89\xa4\xe2\x88\xa3S\xe2\x88\xa3 and remove SiS_iSi\xe2\x80\x8b from its original position and append it to the end of the string (i.e. shift any character to the end of the string).\n\nFor e.g. if S=S =S= abcde and we apply operation on i=2i = 2i=2, then SSS becomes acdeb.\nHelp Hitesh find the minimum number of operations required to reverse SSS.\nIt is guaranteed that it is possible to reverse the string in a finite number of operations.\nInput Format\n\nThe first line of input contains a single integer  TTT, denoting the number of test cases. The description of  TTT  test cases follows.\nEach test case consists of a single line containing the string S.\n\nOutput Format\nFor each test case, output the minimum number of operations required to reverse the string SSS.\nConstraints\n\n\n1\xe2\x89\xa4T\xe2\x89\xa41031 \\leq T \\leq 10^31\xe2\x89\xa4T\xe2\x89\xa4103\n1\xe2\x89\xa4\xe2\x88\xa3S\xe2\x88\xa3\xe2\x89\xa41051  \\leq \\lvert S \\rvert \\leq 10^51\xe2\x89\xa4\xe2\x88\xa3S\xe2\x88\xa3\xe2\x89\xa4105\nSum of \xe2\x88\xa3S\xe2\x88\xa3\\lvert S \\rvert\xe2\x88\xa3S\xe2\x88\xa3 over all testcases does not exceed 2\xe2\x8b\x851052 \\cdot 10^52\xe2\x8b\x85105.\n\n\nSample 1:\nInputOutput2\nabdeba\ncodechef3\n7\nExplanation:\n\nTest case-1: Following steps can be performed:\n\n\nabdeba\xe2\x86\x92abebadabdeba \\to  abebadabdeba\xe2\x86\x92abebad\nabebad\xe2\x86\x92abeadbabebad \\to abeadbabebad\xe2\x86\x92abeadb\nabeadb\xe2\x86\x92abedbaabeadb \\to  abedbaabeadb\xe2\x86\x92abedba\n\n\nTest case-2: following steps can be performed:\n\n\ncodechef\xe2\x86\x92codechfecodechef \\to  codechfecodechef\xe2\x86\x92codechfe\ncodechfe\xe2\x86\x92codecfehcodechfe \\to codecfehcodechfe\xe2\x86\x92codecfeh\ncodecfeh\xe2\x86\x92codefehccodecfeh \\to codefehccodecfeh\xe2\x86\x92codefehc\ncodefehc\xe2\x86\x92codfehcecodefehc \\to  codfehcecodefehc\xe2\x86\x92codfehce\ncodfehce\xe2\x86\x92cofehcedcodfehce \\to cofehcedcodfehce\xe2\x86\x92cofehced\ncofehced\xe2\x86\x92cfehcedocofehced \\to cfehcedocofehced\xe2\x86\x92cfehcedo\ncfehcedo\xe2\x86\x92fehcedoccfehcedo \\to fehcedoccfehcedo\xe2\x86\x92fehcedoc\n'