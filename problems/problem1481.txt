b"Problem\nRead problem statements in Hindi, Bengali, Mandarin Chinese, Russian, and Vietnamese as well.\nChefland is a big nation which relies on its airport system to guarantee fast travel. Currently, there are NNN airports (numbered 111 through NNN) and MMM bidirectional flights in Chefland. Each flight connects two distinct airports, but there may be any number of flights between each pair of airports. We say that a system of flights is connected if it is possible to travel from each airport to all other airports using these flights. For each airport iii, we also define its degree did_idi\xe2\x80\x8b as the number of flights that have iii as one of their endpoints.\nUnfortunately, it turns out that the current flight system is not necessarily connected. This is unacceptable, so the mayor asked you to propose a new flight system. Formally, this means that you can remove some of the existing flights (possibly none) and arbitrarily create some new flights (possibly none). You may even create multiple flights between the same pairs of airports.\nHowever, the infrastructure and number of employees at each airport is optimised for its current degree did_idi\xe2\x80\x8b, so it would be inconvenient if the new degrees of airports differ too much from the old ones. For each airport iii, let's define xix_ixi\xe2\x80\x8b as the degree of airport iii in the new proposed system of flights. We define the inconvenience of this system as \xe2\x88\x91i=1N\xe2\x88\xa3di\xe2\x88\x92xi\xe2\x88\xa3\\sum_{i=1}^N |d_i-x_i|\xe2\x88\x91i=1N\xe2\x80\x8b\xe2\x88\xa3di\xe2\x80\x8b\xe2\x88\x92xi\xe2\x80\x8b\xe2\x88\xa3.\nYou should propose a connected system of flights such that its inconvenience is the smallest possible. If there are multiple solutions, you may find any one.\nInput\n\nThe first line of the input contains a single integer TTT denoting the number of test cases. The description of TTT test cases follows.\nThe first line of each test case contains two space-separated integers NNN and MMM.\nMMM lines follow. Each of these lines contains two space-separated integers aaa and bbb describing a flight that connects airports aaa and bbb.\n\nOutput\nFor each test case:\n\nFirst, print a line containing two space-separated integers \xe2\x80\x95 the minimum inconvenience and the number of flights FFF in your new system.\nThen, print FFF lines. Each of these lines should contain two space-separated integers aaa and bbb describing a flight that connects airports aaa and bbb.\n\nConstraints\n\nT\xe2\x89\xa4100T \\le 100T\xe2\x89\xa4100\n1\xe2\x89\xa4N\xe2\x89\xa4100,0001 \\le N \\le 100,0001\xe2\x89\xa4N\xe2\x89\xa4100,000\n1\xe2\x89\xa4M\xe2\x89\xa4200,0001 \\le M \\le 200,0001\xe2\x89\xa4M\xe2\x89\xa4200,000\n1\xe2\x89\xa4a,b\xe2\x89\xa4N1 \\le a, b \\le N1\xe2\x89\xa4a,b\xe2\x89\xa4N\na\xe2\x89\xa0ba \\neq ba\xee\x80\xa0=b\nthe sum of NNN over all test cases does not exceed 400,000400,000400,000\nthe sum of MMM over all test cases does not exceed 600,000600,000600,000\n\nSubtasks\nSubtask #1 (30 points): you only have to find the minimum incovenience \xe2\x80\x95 the system of flights you output may be arbitrary as long as it follows the output format (in particular, F=0F = 0F=0 is allowed)\nSubtask #2 (30 points):\n\n1\xe2\x89\xa4N\xe2\x89\xa41,0001 \\le N \\le 1,0001\xe2\x89\xa4N\xe2\x89\xa41,000\n1\xe2\x89\xa4M\xe2\x89\xa42,0001 \\le M \\le 2,0001\xe2\x89\xa4M\xe2\x89\xa42,000\nthe sum of NNN over all test cases does not exceed 4,0004,0004,000\nthe sum of MMM over all test cases does not exceed 6,0006,0006,000\n\nSubtask #3 (40 points): original constraints\nExample Input\n3\r\n3 3\r\n1 2\r\n1 3\r\n2 3\r\n3 1\r\n1 2\r\n3 1\r\n1 2\n\nExample Output\n0 3\r\n1 2\r\n1 3\r\n2 3\r\n2 2\r\n1 2\r\n2 3\r\n2 0\n\nExplanation\nExample case 1: The system is already connected, so we can leave it as it is.\nExample case 2: The optimal solution is to add a new flight between airports 222 and 333.\nExample case 3: Identical to example case 222, but the flight system we output is disconnected. This is an example of an output that would be accepted only in the first subtask."