b'Problem\nRead problem statements in Hindi, Bengali, Mandarin Chinese, Russian, and Vietnamese as well.\nChefland consists of NNN villages connected by N\xe2\x88\x921N-1N\xe2\x88\x921 roads in such a way that the road network is a tree, i.e. there are no cycles and each village is reachable from any other village. A well known legend says that in the middle of each road, there is a hidden precious stone. There are KKK different colours of stones, conveniently numbered 111 through KKK, and for each road, we also know the colour of the stone hidden there.\nKing Chef wants a new beautiful crown, so he organises an expedition to find some stones in the following way:\n\nChef chooses a set of MMM villages to be the expedition basis, in such a way that they form a connected subgraph of Chefland, i.e. for any two villages in the basis, the path between them must not visit any village that is not in the basis.\nThe expedition gathers the stones in all roads which lie on the "frontier" of the expedition basis, i.e. all edges for which one endpoint lies in the basis and the other endpoint does not.\n\nFor each of the 2K2^K2K possible sets of colours, Chef wants to know if it is possible that the expedition will return with exactly this set, i.e. there is a basis such that the expedition returns with at least one stone of each colour in this set and no stones with colours that are not in this set.\nSince Chef is not sure about the size of the expedition crew, he also wants you to find these answers for each possible value of MMM.\nInput\n\nThe first line of the input contains a single integer TTT denoting the number of test cases. The description of TTT test cases follows.\nThe first line of each test case contains two space-separated integers NNN and KKK.\nEach of the following N\xe2\x88\x921N-1N\xe2\x88\x921 lines contains three space-separated integers uuu, vvv and ccc, denoting that villages uuu and vvv are connected by a road and in this road, there is a stone with colour ccc.\n\nOutput\nLet\'s associate a set SSS of colours with a bitmask \xe2\x88\x91c\xe2\x88\x88S2c\xe2\x88\x921\\sum_{c \\in S} 2^{c-1}\xe2\x88\x91c\xe2\x88\x88S\xe2\x80\x8b2c\xe2\x88\x921.\nFor each test case, print NNN lines. For each iii (1\xe2\x89\xa4i\xe2\x89\xa4N1 \\le i \\le N1\xe2\x89\xa4i\xe2\x89\xa4N), the iii-th of these lines should contain 2K2^K2K integers but not separated by spaces; for each jjj (0\xe2\x89\xa4j<2K0 \\le j \\lt 2^K0\xe2\x89\xa4j<2K), the j+1j+1j+1-th integer should be 111 if it is possible to obtain the set with bitmask jjj for M=iM=iM=i or 000 if it is impossible.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa45001 \\le T \\le 5001\xe2\x89\xa4T\xe2\x89\xa4500\n1\xe2\x89\xa4N\xe2\x89\xa41001 \\le N \\le 1001\xe2\x89\xa4N\xe2\x89\xa4100\n1\xe2\x89\xa4K\xe2\x89\xa4121 \\le K \\le 121\xe2\x89\xa4K\xe2\x89\xa412\n1\xe2\x89\xa4u,v\xe2\x89\xa4N1 \\le u, v \\le N1\xe2\x89\xa4u,v\xe2\x89\xa4N\n1\xe2\x89\xa4c\xe2\x89\xa4K1 \\le c \\le K1\xe2\x89\xa4c\xe2\x89\xa4K\nthe graph described on the input is a tree\nthe sum of NNN over all test cases does not exceed 500500500\n\nSubtasks\nSubtask #1 (10 points): for each valid iii, the iii-th edge connects vertices iii and i+1i+1i+1 (in other words, the tree is a line)\nSubtask #2 (15 points): K\xe2\x89\xa44K \\le 4K\xe2\x89\xa44\nSubtask #3 (25 points): K\xe2\x89\xa48K \\le 8K\xe2\x89\xa48\nSubtask #4 (50 points): original constraints\nSample 1:\nInputOutput2\n3 2\n1 2 1\n2 3 2\n3 1\n1 2 1\n2 3 10111\n0110\n1000\n01\n01\n10\nExplanation:\nExample case 1:\r\nFor M=1M = 1M=1, there are three subtrees:\n\nonly vertex 111: we obtain the set {1}\\{1\\}{1} with bitmask 111\nonly vertex 222: we obtain the set {1,2}\\{1, 2\\}{1,2} with bitmask 333\nonly vertex 333: we obtain the set {2}\\{2\\}{2} with bitmask 222\n\nFor M=2M = 2M=2, there are two possible subtrees:\n\nvertices {1,2}\\{1, 2\\}{1,2}: we obtain the set {2}\\{2\\}{2} with bitmask 222\nvertices {2,3}\\{2, 3\\}{2,3}: we obtain the set {1}\\{1\\}{1} with bitmask 111\n\nFor M=3M = 3M=3, we can only choose the whole tree, which generates the empty set (with bitmask 000).'