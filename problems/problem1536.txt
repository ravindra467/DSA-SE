b"Problem\nRead problem statements in Bengali, Mandarin Chinese, Russian, and Vietnamese as well.\nDuck Dodgers is hosting a party to make friends throughout the galaxy. He has already invited NNN people (numbered 111 through NNN). Initially, none of them are friends with Duck Dodgers, but he plans to become friends with everyone. Each friendship is between two people and bidirectional.\nAmong these NNN guests, MMM friendships have already been made. You are given these MMM pairs of people who have become friends, in chronological order. During the party, no more frienships will be made among the guests; each of them can only become friends with Dodgers.\nIn order to become friends with everyone, Dodgers follows a specific process.\n\nAs long as there is a guest that is not his friend, Dodgers goes to the first such guest (the one with the smallest number; let's name him Brick) and becomes friends with this guest; then, Brick considers all his friends in the order in which he became friends with them, chooses the first (oldest) friend that Dodgers has not become friends with yet (let's name her Savannah) and introduces Dodgers to Savannah.\nThen, Dodgers goes to Savannah, becomes her friend and repeats this \xe2\x80\x95 Savannah introduces Dodgers to her oldest friend which Dodgers has not become friends with, Dodgers becomes friends with this person and so forth, repeating the same step recursively.\nWhen Dodgers is friends with all of Savannah's friends, he leaves Savannah and goes back to Brick. Brick again considers all his friends in the same order and chooses the next friend that Dodgers has not become friends with until he returned to Brick, introduces Dodgers to this friend, Dodgers becomes friends with this person and repeats the same process as with Savannah.\nThis happens with all people Dodgers becomes friends with \xe2\x80\x95 for example, whenever he returns to Savannah, she also chooses her next oldest friend that Dodgers has not become friends with yet (or sends Dodgers back to Brick if there is no such person), introduces Dodgers to this person, Dodgers repeats the same process as with Brick, Savannah and everyone else, and when it's done, returns to Savannah again.\nWhen Dodgers returns to Brick and Brick finds out that Dodgers is already a friend of all of Brick's friends, Dodgers moves to the guest with the smallest index that has not become his friend yet and continues this process just like with Brick.\n\nWhen Dodgers knows everyone, he starts playing some games with the guests. For each game, he chooses two integers lll and rrr and invites the guests lll through rrr (inclusive) to play a game. A guest g1g_1g1\xe2\x80\x8b thinks that a game is fair if this guest is invited to play this game and there is no guest g2g_2g2\xe2\x80\x8b who satisfies the following conditions:\n\ng2g_2g2\xe2\x80\x8b is invited to play this game\ng1g_1g1\xe2\x80\x8b and g2g_2g2\xe2\x80\x8b are friends\ng2g_2g2\xe2\x80\x8b became Dodgers' friend strictly earlier than g1g_1g1\xe2\x80\x8b (since Dodgers would support his older friends more)\n\nYou should process QQQ queries. In each query, you are given the parameters lll and rrr of a game, and you should find the number of guests who think it is fair. The queries are encoded so that you have to process them online.\nInput\n\nThe first line of the input contains a single integer TTT denoting the number of test cases. The description of TTT test cases follows.\nThe first line of each test case contains four space-separated integers NNN, MMM, QQQ and sss. Here, sss is a parameter which is only used when decoding queries.\nMMM lines follow. For each iii (1\xe2\x89\xa4i\xe2\x89\xa4M1 \\le i \\le M1\xe2\x89\xa4i\xe2\x89\xa4M), the iii-th of these lines contains two space-separated integers aia_iai\xe2\x80\x8b and bib_ibi\xe2\x80\x8b denoting that the iii-th friendship made before the party was between guests aia_iai\xe2\x80\x8b and bib_ibi\xe2\x80\x8b (friendship 111 is the oldest).\nThe next QQQ lines describe queries. Each of these lines contains two space-separated integers xxx and yyy. The parameters lll and rrr for this query can be computed as follows:\n\nLet lastlastlast be the answer to the previous query, or 000 if this is the first query in this test case.\nSet lll to (x+s\xe2\x8b\x85last\xe2\x88\x921)(x + s \\cdot last - 1)(x+s\xe2\x8b\x85last\xe2\x88\x921) modulo N+1N + 1N+1.\nSet rrr to (y+s\xe2\x8b\x85last\xe2\x88\x921)(y + s \\cdot last - 1)(y+s\xe2\x8b\x85last\xe2\x88\x921) modulo N+1N + 1N+1.\nIf l>rl \\gt rl>r, swap lll and rrr.\n\n\n\nOutput\nFor each query, print a single line containing one integer \xe2\x80\x95 the number of guests who think the given game is fair.\nConstraints\n\n1\xe2\x89\xa4N,Q\xe2\x89\xa41061 \\le N, Q \\le 10^61\xe2\x89\xa4N,Q\xe2\x89\xa4106\n0\xe2\x89\xa4M\xe2\x89\xa41060 \\le  M \\le 10^60\xe2\x89\xa4M\xe2\x89\xa4106\n1\xe2\x89\xa4ai,bi\xe2\x89\xa4N1 \\le a_i, b_i \\le N1\xe2\x89\xa4ai\xe2\x80\x8b,bi\xe2\x80\x8b\xe2\x89\xa4N for each valid iii\n1\xe2\x89\xa4x,y\xe2\x89\xa4N1 \\le x, y \\le N1\xe2\x89\xa4x,y\xe2\x89\xa4N\nthe sum of NNN over all test cases does not exceed 10610^6106\nthe sum of MMM over all test cases does not exceed 10610^6106\nthe sum of QQQ over all test cases does not exceed 10610^6106\n\nSubtasks\nSubtask 1 (49 points): s=0s = 0s=0, i.e. the queries do not have to be processed online\nSubtask 2 (51 points): s=1s = 1s=1\nSample 1:\nInputOutput1\n4 3 5 0\n1 2\n1 3\n2 4\n3 4\n1 3\n1 4\n3 2\n3 22\n1\n1\n2\n2\nExplanation:\nExample case 1: Dodgers first meets and befriends guest 111. Then, guest 111 introduces Dodgers to his oldest friend, which is guest 222. Guest 222 introduces Dodgers to his oldest friend that Dodgers hasn't met yet, which is guest 444. Since Dodgers is already friends with all the friends of guest 444, he goes back to guest 222. Again, all the friends of guest 222 are also Dodgers' friends, so he goes back to guest 111. Then, guest 111 introduces him to guest 333 and Dodgers becomes friends with guest 333. Now, all guests are his friends."