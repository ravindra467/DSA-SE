b'Problem\nChef loves to cook delicious food, but before cooking food comes shopping for the ingredients for preparing food. So Chef went to the nearest supermarket for buying the lowest price ingredients.\nBut, as every super-market wants to maximize their profit, so they sell items in bundles rather than individual packs. Our Chef is smart enough to understand this trick, and he wants to get the required ingredients at the lowest price he can.\nSo, Chef follows this simple trick rather than buying the entire bundle of items he would buy only the selected items from that bundle, of which the entire bundle is an integer multiple and these selected items must be minimized.\nThe minimized string can be any permutation of any length from the given string. also, you can re-arrange the minimized string in any way to form the original string\nFor Eg: one bundle in the supermarket can be  "abccabbca" ( where each character represents the starting letter from the name of the ingredients ), but the chef will only buy "abc" as the original bundle is \'3\' times the multiple of "abc" and we can re-make (any permutation) the entire bundle with "abc"\r\nBut, Chef finds this task a little tedious, so he asks for your help to buy the ingredients.\nNote: the string which represents the bundle of ingredients contains only lowercase latin characters.\nInput:\n\nThe first line of the input contains a single integer TTT. TTT denoting the number of test cases. The description of TTT test cases is as follows.\nThe next line of the input contains a single integer NNN. NNN denotes the total number of items in the current bundle.\nThe next line of the input contains a string SSS of length NNN, in which each character is the starting letter from the name of the ingredient.\n\nOutput:\n\n\nPrint the minimum number of characters (which denotes the starting letter of ingredients), from which we can re-make the entire bundle of items. The characters printed must be lexicographically sorted.\n\n\nIf it is not possible to get the required answer print \xe2\x88\x921-1\xe2\x88\x921\n\n\nNote: Each test case output must be printed on a new line\nConstraints:\n\n1\xe2\x89\xa4T\xe2\x89\xa41021 \\leq T \\leq 10^21\xe2\x89\xa4T\xe2\x89\xa4102\n1\xe2\x89\xa4N\xe2\x89\xa41051 \\leq N \\leq 10^51\xe2\x89\xa4N\xe2\x89\xa4105\n1\xe2\x89\xa4S\xe2\x89\xa4N1 \\leq S \\leq N1\xe2\x89\xa4S\xe2\x89\xa4N\n\nSample Input:\n1\n9\nabccabbca\nSample Output:\nabc\nExplanation:\n\nIn the 1st Test case: As we can re-make the given string "abccabbca" using the string "abc" i.e. the original string is \'3\' times the multiple of "abc". This can be proved is the minimum number of characters to re-make the given string.\n'