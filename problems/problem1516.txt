b'Problem\nRead problem statements in Hindi, Bengali, Mandarin Chinese, Russian, and Vietnamese as well.\nChef is playing a game called "Snake and Apple Tree". This game is played on a grid with NNN rows (numbered 111 through NNN) and MMM columns (numbered 111 through MMM). Some cells of this grid are blocked. Initially, there are also SSS snakes present in SSS non-blocked cells. The snakes do not grow, so each snake always takes up exactly one cell.\nThe game starts at second 000 and will run for TTT seconds. At the end of each second, each snake may (independently from the other snakes) move to an edge-adjacent non-blocked cell or stay in its current cell. During each second, there may be at most one snake in each cell, but when a snake is moving out of a cell, another snake is allowed to move into that cell at the same time.\nDuring these TTT seconds, ZZZ apple trees (numbered 111 through ZZZ) will grow in some cells, bear fruit and wither. For each valid iii, the iii-th tree will grow in the cell in row XiX_iXi\xe2\x80\x8b and column YiY_iYi\xe2\x80\x8b and start bearing fruit at a time PiP_iPi\xe2\x80\x8b. At a later time QiQ_iQi\xe2\x80\x8b, the tree will wither and bear no fruit. At each second between the PiP_iPi\xe2\x80\x8b-th and QiQ_iQi\xe2\x80\x8b-th second (including PiP_iPi\xe2\x80\x8b, but not including QiQ_iQi\xe2\x80\x8b), if there is a snake in the same cell as this tree and it does not move to another cell at the end of this second, it may eat an apple from this tree. Eating one apple from the tree increases the total happiness of the snakes by HiH_iHi\xe2\x80\x8b; if a snake eats multiple apples from this tree, the happiness increases by HiH_iHi\xe2\x80\x8b multiple times.\nEach snake takes 111 second to eat an apple. It cannot do anything else while eating and if there are multiple trees bearing fruit in the same cell, a snake in that cell may only eat an apple from one tree during each second (possibly from different trees during different seconds).\nInitially, the total happiness of the snakes is 000. Help Chef maximise their happiness after TTT seconds.\nInput\n\nThe first line of the input contains four space-separated integers NNN, MMM, ZZZ and TTT.\nNNN lines follow. For each iii (1\xe2\x89\xa4i\xe2\x89\xa4N1 \\le i \\le N1\xe2\x89\xa4i\xe2\x89\xa4N), the iii-th of these lines contains a single string with length MMM describing the iii-th row of the grid: for each valid jjj, the jjj-th character of this string is \'#\' if the cell in the jjj-th column of this row is blocked, \'.\' if it is empty or \'S\' if it contains a snake.\nZZZ lines follow. For each iii (1\xe2\x89\xa4i\xe2\x89\xa4Z1 \\le i \\le Z1\xe2\x89\xa4i\xe2\x89\xa4Z), the iii-th of these lines contains five space-separated integers XiX_iXi\xe2\x80\x8b, YiY_iYi\xe2\x80\x8b, PiP_iPi\xe2\x80\x8b, QiQ_iQi\xe2\x80\x8b and HiH_iHi\xe2\x80\x8b.\n\nOutput\nPrint a single line containing one integer \xe2\x80\x94 the maximum total happiness of the snakes.\nConstraints\n\n1\xe2\x89\xa4S\xe2\x89\xa4251 \\le S \\le 251\xe2\x89\xa4S\xe2\x89\xa425\n1\xe2\x89\xa4N,M\xe2\x89\xa42561 \\le N, M \\le 2561\xe2\x89\xa4N,M\xe2\x89\xa4256\n1\xe2\x89\xa4N\xe2\x8b\x85M\xe2\x89\xa42561 \\le N \\cdot M \\le 2561\xe2\x89\xa4N\xe2\x8b\x85M\xe2\x89\xa4256\n1\xe2\x89\xa4Z\xe2\x89\xa45,0001 \\le Z \\le 5,0001\xe2\x89\xa4Z\xe2\x89\xa45,000\n1\xe2\x89\xa4T\xe2\x89\xa4801 \\le T \\le 801\xe2\x89\xa4T\xe2\x89\xa480\n1\xe2\x89\xa4Xi\xe2\x89\xa4N1 \\le X_i \\le N1\xe2\x89\xa4Xi\xe2\x80\x8b\xe2\x89\xa4N for each valid iii\n1\xe2\x89\xa4Yi\xe2\x89\xa4M1 \\le Y_i \\le M1\xe2\x89\xa4Yi\xe2\x80\x8b\xe2\x89\xa4M for each valid iii\n0\xe2\x89\xa4Pi<Qi\xe2\x89\xa4T0 \\le P_i \\lt Q_i \\le T0\xe2\x89\xa4Pi\xe2\x80\x8b<Qi\xe2\x80\x8b\xe2\x89\xa4T for each valid iii\n1\xe2\x89\xa4Hi\xe2\x89\xa41061 \\le H_i \\le 10^61\xe2\x89\xa4Hi\xe2\x80\x8b\xe2\x89\xa4106 for each valid iii\n\nSubtasks\nSubtask #1 (20 points, time limit 1 second): S\xe2\x89\xa42S \\le 2S\xe2\x89\xa42\nSubtask #2 (80 points, time limit 4 seconds): original constraints\nExample Input 1\n3 3 1 30\r\n...\r\n.#.\r\n.#S\r\n3 1 0 20 4\n\nExample Output 1\n56\n\nExplanation 1\nThere is only one snake. It starts in the cell (3,3)(3, 3)(3,3) and it will reach the only tree at (3,1)(3, 1)(3,1) during the 666-th second. From then on, it will eat apples from this tree until the 202020-th second, so the total happiness is (20\xe2\x88\x926)\xe2\x8b\x854=56(20 - 6) \\cdot 4 = 56(20\xe2\x88\x926)\xe2\x8b\x854=56.\nExample Input 2\n1 4 2 20\r\nSS..\r\n1 3 0 4 20\r\n1 4 0 4 10\n\nExample Output 2\n60\n\nExplanation 2\nDuring the first two seconds, both snakes will move simultaneously to the right. Then, they will simultaneously start eating apples. Each snake will eat two apples, so the total happiness will be 2\xe2\x8b\x85(10+20)=602 \\cdot (10 + 20) = 602\xe2\x8b\x85(10+20)=60.'