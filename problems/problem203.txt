b"Problem\nRead problems statements in Hindi, Mandarin Chinese, Russian, Vietnamese, and Bengali as well.\nChef is fond of pepperoni pizza, as we saw here. Once again, he has a pepperoni pizza in the shape of a grid with NNN rows (numbered 111 through NNN from top to bottom) and NNN columns (numbered 111 through NNN from left to right). Some cells of this grid contain pepperoni, while other ones do not.\nChef wants to cut the pizza vertically in half and give the two halves to two of his friends. Formally, one friend should get everything in columns 111 through N/2N/2N/2 and the other friend should get everything in the columns N/2+1N/2+1N/2+1 through NNN.\nBefore cutting the pizza, Chef may perform the following operation any number of times (including zero): choose an integer xxx (1\xe2\x89\xa4x\xe2\x89\xa4N1 \\le x \\le N1\xe2\x89\xa4x\xe2\x89\xa4N) and reverse the xxx-th row of the grid \xe2\x80\x95 in other words, for each valid iii, the cell in the iii-th column and xxx-th row is moved to the N+1\xe2\x88\x92iN+1-iN+1\xe2\x88\x92i-th column in the same row.\nAfter the pizza is cut, let's denote the number of cells containing pepperoni in the first half and in the second half by p1p_1p1\xe2\x80\x8b and p2p_2p2\xe2\x80\x8b respectively. Chef wants to minimise their absolute difference \xe2\x88\xa3p1\xe2\x88\x92p2\xe2\x88\xa3|p_1-p_2|\xe2\x88\xa3p1\xe2\x80\x8b\xe2\x88\x92p2\xe2\x80\x8b\xe2\x88\xa3, but he is lazy, so he just wants you to perform any valid sequence of operations such that the absolute difference in the final grid is minimized.\nYou need to find a final grid (the grid after performing all operations) such that \xe2\x88\xa3p1\xe2\x88\x92p2\xe2\x88\xa3|p_1 - p_2|\xe2\x88\xa3p1\xe2\x80\x8b\xe2\x88\x92p2\xe2\x80\x8b\xe2\x88\xa3 for this grid is the smallest possible. If there are multiple final grids that minimise \xe2\x88\xa3p1\xe2\x88\x92p2\xe2\x88\xa3|p_1 - p_2|\xe2\x88\xa3p1\xe2\x80\x8b\xe2\x88\x92p2\xe2\x80\x8b\xe2\x88\xa3, you may find any one.\nInput\n\nThe first line of the input contains a single integer TTT denoting the number of test cases. The description of TTT test cases follows.\nThe first line of each test case contains a single integer NNN.\nNNN lines follow. For each iii (1\xe2\x89\xa4i\xe2\x89\xa4N1 \\le i \\le N1\xe2\x89\xa4i\xe2\x89\xa4N), the iii-th of these lines contains a string with length NNN describing the iii-th row of the grid; for each valid jjj, the jjj-th character of this string is '1' if the cell in the iii-th row and jjj-th column contains pepperoni or '0' if it does not.\n\nOutput\nFor each test case, print NNN lines. For each valid iii, the iii-th of these lines should contain a string with length NNN describing the iii-th row of the grid after performing all operations, in the same format as on the input. It must be possible to obtain this grid from the initial grid using some valid sequence of operations.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa4301 \\le T \\le 301\xe2\x89\xa4T\xe2\x89\xa430\n2\xe2\x89\xa4N\xe2\x89\xa41502 \\le N \\le 1502\xe2\x89\xa4N\xe2\x89\xa4150\nNNN is even\nthe sum of NNN over all test cases does not exceed 300300300\n\nSample 1:\nInputOutput2\n2\n01\n01\n4\n0111\n0001\n1010\n101010\n01\n1110\n0001\n1010\n1010\nExplanation:\nExample case 1: We need to reverse either of the rows, leading to \xe2\x88\xa3p1\xe2\x88\x92p2\xe2\x88\xa3=0|p_1-p_2| = 0\xe2\x88\xa3p1\xe2\x80\x8b\xe2\x88\x92p2\xe2\x80\x8b\xe2\x88\xa3=0. Either of these solutions would be accepted.\nExample case 2: It is optimal to reverse the first row, leading to exactly 444 pepperoni on each side (and \xe2\x88\xa3p1\xe2\x88\x92p2\xe2\x88\xa3=0|p_1-p_2| = 0\xe2\x88\xa3p1\xe2\x80\x8b\xe2\x88\x92p2\xe2\x80\x8b\xe2\x88\xa3=0 again)."