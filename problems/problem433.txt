b"Problem\nRead problems statements in Mandarin Chinese, Russian, and Bengali as well.\nSome cooking competitions going on to be held in various cities and the Chef wants to participate in them. There are NNN cities numbered from 111 to NNN and they are connected by N\xe2\x88\x921N-1N\xe2\x88\x921 roads such that every city is connected to every other city. But traveling is a bit different here. Every city iii is assigned a travel value, AiA_iAi\xe2\x80\x8b. From a city numbered XXX, one can only travel to another city YYY such that the simple path from XXX to YYY has exactly AXA_XAX\xe2\x80\x8b roads.\nTo participate in a city's competition, the Chef just has to visit it. Help the Chef by finding the maximum number of competitions he can participate in if he can start from any city and visit any city multiple times.\nFormally, given a tree in which every node iii is assigned a value AiA_iAi\xe2\x80\x8b, you have to find the maximum number of distinct nodes that can be visited, if we can start from any node and visit any node multiple times. The only condition is that you can only move from node iii to jjj if the number of edges between iii and jjj is exactly AiA_iAi\xe2\x80\x8b.\nNote: Usually, there is no bound on the stack memory, and is equal to the total memory limit of 1.5 GB. But due to a system configuration issue, the stack limit for C++ is temporarily set to 8MB. So, if you believe that your code requires larger stack limit, please include this in your code.\nInput Format\nThe first line contains a single integer TTT, the number of test cases. Then the test cases follow.\n\n\nThe first line of each test case contains a single integer NNN (1\xe2\x89\xa4N\xe2\x89\xa41051 \\le N \\le  10^{5}1\xe2\x89\xa4N\xe2\x89\xa4105).\n\n\nNext N\xe2\x88\x921N-1N\xe2\x88\x921 lines contain 2 integers each, uiu_iui\xe2\x80\x8b and viv_ivi\xe2\x80\x8b, denoting a road between cities uiu_iui\xe2\x80\x8b and viv_ivi\xe2\x80\x8b.\n\n\nNext line contains NNN space separated integers, A1\xe2\x8b\x85\xe2\x8b\x85\xe2\x8b\x85ANA_1 \\cdot \\cdot \\cdot A_NA1\xe2\x80\x8b\xe2\x8b\x85\xe2\x8b\x85\xe2\x8b\x85AN\xe2\x80\x8b.\n\n\nOutput Format\nIn a single line, output the maximum number of cities that can be visited, starting from any one and visiting any city any number of times.\nConstraints\n\n\n1\xe2\x89\xa4T\xe2\x89\xa41041 \\le T \\le 10^41\xe2\x89\xa4T\xe2\x89\xa4104\n1\xe2\x89\xa4N\xe2\x89\xa41051 \\leq N \\leq 10^51\xe2\x89\xa4N\xe2\x89\xa4105\n1\xe2\x89\xa4ui,vi\xe2\x89\xa4N1 \\le u_i,v_i \\le N1\xe2\x89\xa4ui\xe2\x80\x8b,vi\xe2\x80\x8b\xe2\x89\xa4N and ui\xe2\x89\xa0viu_i \\neq v_iui\xe2\x80\x8b\xee\x80\xa0=vi\xe2\x80\x8b\n1\xe2\x89\xa4Ai\xe2\x89\xa41091 \\le A_i \\le 10^91\xe2\x89\xa4Ai\xe2\x80\x8b\xe2\x89\xa4109\nIt is guaranteed that the given edges form a tree.\nIt is also guaranteed that the sum of NNN for all test cases does not exceed 2\xe2\x8b\x851052 \\cdot 10^{5}2\xe2\x8b\x85105.\n\n\nSample 1:\nInputOutput3\n5\n1 3\n3 5\n1 4\n4 2\n1 2 3 3 1\n6\n1 2\n1 3\n2 4\n2 5\n3 6\n1 1 1 1 1 1\n8\n1 5\n1 6\n1 7\n1 8\n1 2\n2 3\n3 4\n1 2 3 4 5 6 7 85\n6\n4\nExplanation:\nIn example case 111,\n\nFrom city 111, Chef can move only to cities 333 or 444.\nFrom city 222, Chef can move only to city 111.\nFrom city 333, Chef can move only to city 222.\nFrom city 444, Chef can move only to city 555.\nFrom city 555, Chef can move only to city 333.\nChef can follow the path 1\xe2\x86\x923\xe2\x86\x922\xe2\x86\x921\xe2\x86\x924\xe2\x86\x9251 \\rightarrow 3 \\rightarrow 2 \\rightarrow 1 \\rightarrow 4 \\rightarrow 51\xe2\x86\x923\xe2\x86\x922\xe2\x86\x921\xe2\x86\x924\xe2\x86\x925, and visit every city.\n\nIn example case 222,\n\nChef can follow any path to visit all the vertices eventually. since every AiA_iAi\xe2\x80\x8b = 111.\n\nIn example case 333,\n\nChef can follow the path 1\xe2\x86\x922\xe2\x86\x924\xe2\x86\x9251 \\rightarrow 2 \\rightarrow 4 \\rightarrow 51\xe2\x86\x922\xe2\x86\x924\xe2\x86\x925.\nThere are other paths as well, but the maximum number would be 4 only.\n"