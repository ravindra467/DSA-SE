b'Problem\n\nConsider a weighted, undirected and connected graph with N nodes, numbered 1 to N, and M edges. Find the minimum cost of any walk from node S to node T , via node V (visiting node V is compulsory) , where cost of a walk is the sum of weights of distinct edges occurring in the walk. This means that even if an edge occurs multiple times in a walk, its weight is added only once to the cost of the walk.\nWarning: Large input data, use faster methods for Input.\n\nInput\n\n\nThe first line contains an integer t , the number of test cases.\nt test cases follow:\nThe first line of each test case contains 2 space seperated integers: N and M.\nThe next line contains 3 space seperated integers: S, T and V.\nThe next M lines contain 3 space seperated integers each: a b c , denoting an edge between nodes a and b with weight c.\nNote: There is at most one edge between any pair of nodes and there are no self loops.\n\nOutput\n\nOutput the required answer for each test case on a separate line\n\nConstraints\n\n1 \xe2\x89\xa4 t \xe2\x89\xa4 5\n1 \xe2\x89\xa4 N \xe2\x89\xa4 100000\n1 \xe2\x89\xa4 S,T,V \xe2\x89\xa4 N\nN-1 \xe2\x89\xa4 M \xe2\x89\xa4 min(100000,N*(N-1)/2)\n1 \xe2\x89\xa4 a, b \xe2\x89\xa4 N\n1 \xe2\x89\xa4 c \xe2\x89\xa4 109\n\nExample\nInput:\n2\n4 3\n1 3 4\n1 2 1\n2 3 2\n2 4 3\n4 3\n1 1 4\n1 2 1\n2 3 2\n2 4 3\nOutput:\n6\n4\n\nExplanation:\nTest case 1:\nThe walk with least cost is: 1->2->3->2->4\nNote that the edge (2-3) occurs twice in the walk, but its weight is added only once to the walk.'