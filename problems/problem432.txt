b"Problem\nYou are trying to create an array AAA containing NNN integers. However, your array-creating-machine has some restrictions. More formally, you are given a constant DDD, and two arrays BBB and CCC, each with MMM elements, then:\n\nAi\xe2\x89\xa4DA_i \\le DAi\xe2\x80\x8b\xe2\x89\xa4D for all 1\xe2\x89\xa4i\xe2\x89\xa4N1 \\le i \\le N1\xe2\x89\xa4i\xe2\x89\xa4N\nAi\xe2\x89\xa5Ai\xe2\x88\x921A_i \\ge A_{i - 1}Ai\xe2\x80\x8b\xe2\x89\xa5Ai\xe2\x88\x921\xe2\x80\x8b for all 1<i\xe2\x89\xa4N1 \\lt i \\le N1<i\xe2\x89\xa4N\nACj\xe2\x8b\x85Bj\xe2\x89\xa4DA_{C_j}\\cdot B_j \\le DACj\xe2\x80\x8b\xe2\x80\x8b\xe2\x8b\x85Bj\xe2\x80\x8b\xe2\x89\xa4D for all 1\xe2\x89\xa4j\xe2\x89\xa4M1 \\le j \\le M1\xe2\x89\xa4j\xe2\x89\xa4M\n\nFind how many different arrays can you create. Since answer can be big, print it modulo\n998244353998244353998244353.\nInput Format\n\nThe first line of the input contains a single integer TTT - the number of test cases. The test cases then follow.\nThe first line of each test case contains 333 integers NNN, MMM, and DDD - the length of the array AAA you need to create, the length of BBB and CCC, the constant from the statement.\nThe iii-th line of the next MMM lines of each test case contains two integers CiC_iCi\xe2\x80\x8b and BiB_iBi\xe2\x80\x8b.\n\nOutput Format\nFor each test case output a single integer - the number of different arrays you can create modulo 998244353998244353998244353.\nConstraints\n\n\n1\xe2\x89\xa4T\xe2\x89\xa41041 \\le T \\le 10^{4}1\xe2\x89\xa4T\xe2\x89\xa4104\n1\xe2\x89\xa4N\xe2\x89\xa41071 \\le N \\le 10^71\xe2\x89\xa4N\xe2\x89\xa4107\n1\xe2\x89\xa4M,D\xe2\x89\xa41051 \\le M, D \\le 10^51\xe2\x89\xa4M,D\xe2\x89\xa4105\n1\xe2\x89\xa4Ci\xe2\x89\xa4N1 \\le C_i \\le N1\xe2\x89\xa4Ci\xe2\x80\x8b\xe2\x89\xa4N\n1\xe2\x89\xa4Bi\xe2\x89\xa4D1 \\le B_i \\le D1\xe2\x89\xa4Bi\xe2\x80\x8b\xe2\x89\xa4D\nIt's guaranteed that the sum of MMM over all test cases doesn't exceed 10510^5105, and sum of DDD over all test cases doesn't exceed 10510^5105\nIt's guaranteed that in each test case all CiC_iCi\xe2\x80\x8b are different\n\n\nSubtasks\n\n\nSubtask 111 (30 points): sum of DDD over all test cases doesn't exceed 300030003000.\nSubtask 222 (70 points): Original constraints.\n\n\nSample 1:\nInputOutput5\n4 2 6\n3 3\n1 4\n5 3 6\n4 2\n3 3\n1 4\n4 1 4\n3 2\n14 3 100\n3 39\n7 3\n10 11\n100 1 1000\n50 100\n16\n33\n13\n547870382\n141926475\n\nExplanation:\n\nTest case 111: One array is {1,\xe2\x80\x891,\xe2\x80\x891,\xe2\x80\x891}\\{1,\\,1,\\,1,\\,1\\}{1,1,1,1} and for each value of last element from 222 to 666, there are 333 possible combinations of first three values: {1,\xe2\x80\x891,\xe2\x80\x891}\\{1,\\,1,\\,1\\}{1,1,1}, {1,\xe2\x80\x891,\xe2\x80\x892}\\{1,\\,1,\\,2\\}{1,1,2}, {1,\xe2\x80\x892,\xe2\x80\x892}\\{1,\\,2,\\,2\\}{1,2,2}. Therefore there are a total of 1+5\xe2\x8b\x853=161 + 5 \\cdot 3 = 161+5\xe2\x8b\x853=16 possible arrays.\n"