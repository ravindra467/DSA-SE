b"Problem\nRead problem statements in Hindi, Bengali, Mandarin Chinese, Russian, and Vietnamese as well.\nTo heal people with virus infections, Ada designed small robots (nanobots) that travel through the bloodstream, scanning all tissues of the body.\nThe nanobots have detected a region of infected cells described by a matrix with NNN rows (numbered 111 through NNN from top to bottom) and NNN columns (numbered 111 through NNN from left to right). For each valid rrr and ccc, the cell in row rrr and column ccc has a membrane with thickness Tr,cT_{r,c}Tr,c\xe2\x80\x8b.\nTo prevent the spread of the virus, the nanobots surrounded the infected region and decided to destroy all the infected cells. The nanobots can form a powerful laser with force FFF and shoot this laser horizontally from the left or from the right of any row, or vertically from the top or from the bottom of any column. Whenever the laser is fired, it breaks through the maximum number of cells in its way such that the total thickness of these cells' membranes is less than or equal to FFF and destroys them; the cells that lie behind them are unaffected. Formally, if the laser destroys CCC cells, then they are the first CCC cells which lie in the laser's way (from the direction in which it is fired), haven't been destroyed before, and the sum of thicknesses of their membranes is at most FFF.\nThe laser may be fired multiple times from any directions in any rows or columns. It may also be fired repeatedly in the same direction and the same row or column. However, each shot uses a lot of the nanobots' energy, so Ada wants to destroy all cells using as few shots as possible.\nLet HHH be the minimum number of shots needed to destroy all cells when using only horizontal shots, and VVV the minimum number of shots needed to destroy all cells when using only vertical shots. Ada programmed the nanobots to perform K=min(V,H)K = \\mathrm{min}(V,H)K=min(V,H) shots. Help Ada write a program that uses a strictly smaller number of shots.\nInput\n\nThe first line of the input contains two space-separated integers NNN and FFF.\nNNN lines follow. For each valid iii, the iii-th of these lines contains NNN space-separated integers Ti,1,Ti,2,\xe2\x80\xa6,Ti,NT_{i,1}, T_{i,2}, \\ldots, T_{i,N}Ti,1\xe2\x80\x8b,Ti,2\xe2\x80\x8b,\xe2\x80\xa6,Ti,N\xe2\x80\x8b.\nThe last line contains a single integer KKK.\n\nOutput\nFirst, print a line containing a single integer SSS (K>SK \\gt SK>S) \xe2\x80\x95 the number of shots you want to make.\nThen, print SSS lines describing the shots. Each of these lines should contain a character XXX, followed by a space and an integer YYY.\nXXX can be 'L', 'R', 'U' or 'D', denoting a laser fired from the left, right, up or down respectively. If XXX is 'L' or 'R', then YYY denotes the row in which the laser is fired; otherwise, YYY denotes the column in which the laser is fired.\nConstraints\n\nN=F=512N = F = 512N=F=512\n1\xe2\x89\xa4Ti,j\xe2\x89\xa4F1 \\le T_{i,j} \\le F1\xe2\x89\xa4Ti,j\xe2\x80\x8b\xe2\x89\xa4F for each valid i,ji, ji,j\nthere is a solution that uses less than KKK shots\n\nExample Input\n4 10\r\n2 6 4 3\r\n1 2 3 4\r\n3 2 3 5\r\n6 9 1 1\r\n8\n\nExample Output\n7\r\nL 1\r\nU 3\r\nD 4\r\nU 2\r\nD 1\r\nL 4\r\nR 1\n\nExplanation\nThe shots and the state of the grid in between the shots are shown below. The positions of the laser in the shots are denoted by '*' and destroyed cells are denoted by 'X'.\n L 1       U 3       D 4\r\n\r\n               *\r\n*X X 4 3   X X X 3   X X X 3\r\n 1 2 3 4   1 2 X 4   1 2 X X\r\n 3 2 3 5   3 2 X 5   3 2 X X\r\n 6 9 1 1   6 9 1 1   6 9 1 X\r\n                           *\r\n\r\n U 2       D 1       L 4\r\n   *\r\n X X X 3   X X X 3   X X X 3\r\n 1 X X X   X X X X   X X X X\r\n 3 X X X   X X X X   X X X X\r\n 6 9 1 X   X 9 1 X  *X X X X\r\n           *\n\nTest Generation\n\nLet Z={1,F/4,F/2,3F/4,F}Z=\\{1, F/4, F/2, 3F/4, F\\}Z={1,F/4,F/2,3F/4,F}.\nFor each pair of elements (L,R)(L, R)(L,R) of ZZZ such that L<RL \\lt RL<R, except (3F/4,F)(3F/4, F)(3F/4,F), there is one test file that uses these parameters LLL and RRR to generate the matrix TTT.\nFor each valid iii and jjj, Ti,jT_{i,j}Ti,j\xe2\x80\x8b is chosen uniformly randomly between LLL and RRR (inclusive).\n\nScoring\nIf S\xe2\x89\xa5KS \\ge KS\xe2\x89\xa5K, you will receive the Wrong Answer verdict; otherwise, the score of a test file is K\xe2\x88\x92SK-SK\xe2\x88\x92S. The score of a submission is the sum of scores of all test files. Your goal is to maximise the score of your submission.\nThere are nine test files. During the contest, the displayed score will account for exactly 3 test files, i.e. your score reflects your submission's performance on approximately 33% (3/9) of the test files. However, if your program gets a non-AC verdict on any test file, your submission's verdict will be non-AC. In other words, an AC verdict denotes that your program runs successfully on all the test files. After the end of the contest, your score will be changed to include the sum of your program's scores over the other 6 test files."