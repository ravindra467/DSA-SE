b'Problem\nThe match is set and your team is ready to win!\n\nThe team has NNN players, each with the ability AiA_iAi\xe2\x80\x8b.\n\nBut you are not happy with the given playing order. You are wondering how to create a new order so that the player with lesser ability go earlier, i.e., in non-decreasing order.\n\nIn one move, you can break a suffix of any length of the array and attach it to the front. You can do the move as many times as you like.\n\nFor example, the Array A=[1,2,3,4,5,6]A = [1, 2, 3, 4, 5, 6]A=[1,2,3,4,5,6] can become A=[5,6,1,2,3,4]A = [5, 6, 1, 2, 3, 4]A=[5,6,1,2,3,4] in one move by breaking and reattaching the suffix of length 222.\n\nFor each testcase, if the array can be sorted non-decreasingly, print YES and the minimum number of moves to do so. Otherwise, print NO.\n Input \nThe first line of the input contains a single integer TTT denoting the number of test cases. The description of TTT test cases follows.\nEach testcase contains two lines. The first line has a single integer NNN, denoting the number of players in the team.\nThe second list has NNN space-separated integers of the array AAA, where AiA_iAi\xe2\x80\x8b represents the ability of the ithi^{th}ith player\n Output \nPrint a single line containing the string "YES" if the string can be sorted or "NO" if it does not (without quotes). If answer is yes, print a second line containing a single integer, the minimum number of moves.\n\nYou may print each character of each string in uppercase or lowercase (for example, the strings "yEs", "yes", "Yes" and "YES" will all be treated as identical).\nConstraints\n 1\xe2\x89\xa4T,N\xe2\x89\xa43\xe2\x8b\x851051 \xe2\x89\xa4 T, N \xe2\x89\xa4 3 \\cdot 10^{5}1\xe2\x89\xa4T,N\xe2\x89\xa43\xe2\x8b\x85105\n 0\xe2\x89\xa4Ai\xe2\x89\xa41090 \xe2\x89\xa4 A_i \xe2\x89\xa4 10^{9}0\xe2\x89\xa4Ai\xe2\x80\x8b\xe2\x89\xa4109\n The sum of all NNN over all testcases TTT, does not exceed 3\xe2\x8b\x851053 \\cdot 10^{5}3\xe2\x8b\x85105.\n\nSample 1:\nInputOutput2\n2\n1 2\n3\n2 1 3YES\n0\nNO\nExplanation:\nExample Case 1: The array is already sorted non-decreasingly. Hence, 0 moves required.Example Case 2: We cannot satisfy the condition for the given array. Hence, answer is NO.'