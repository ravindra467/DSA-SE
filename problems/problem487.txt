b'Problem\nRead problem statements in Bengali, Mandarin Chinese, Russian, and Vietnamese as well.\nChef Ada constructed a simple undirected graph GGG with NNN vertices (numbered 111 through NNN) as follows:\n\nStart with a complete graph with KKK vertices and K\xe2\x8b\x85(K\xe2\x88\x921)/2K \\cdot (K-1)/2K\xe2\x8b\x85(K\xe2\x88\x921)/2 edges.\nThen, add N\xe2\x88\x92KN-KN\xe2\x88\x92K vertices one by one. After adding each vetex, find some clique of K\xe2\x88\x921K-1K\xe2\x88\x921 vertices in the graph and connect the new vertex to all the vertices of that clique.\n\nConsider NNN boolean variables X1,X2,\xe2\x80\xa6,XNX_1, X_2, \\ldots, X_NX1\xe2\x80\x8b,X2\xe2\x80\x8b,\xe2\x80\xa6,XN\xe2\x80\x8b and their negations \xc2\xacX1,\xc2\xacX2,\xe2\x80\xa6,\xc2\xacXN\\neg X_1, \\neg X_2, \\ldots, \\neg X_N\xc2\xacX1\xe2\x80\x8b,\xc2\xacX2\xe2\x80\x8b,\xe2\x80\xa6,\xc2\xacXN\xe2\x80\x8b, corresponding to vertices of the graph. You are given the initial values of all variables.\nA CNF boolean expression is defined as a conjunction of clauses, where each clause is a disjunction of two or more elements of the set of variables and their negations.\nUsing the graph GGG, Ada wrote a CNF boolean expression BBB with MMM clauses, where each clause corresponds to a clique in the graph with some (maybe none) of the variables (corresponding to vertices) negated. More formally, for each iii from 111 to MMM:\n\nAda chose some clique in the graph, consisting of LiL_iLi\xe2\x80\x8b vertices Z1,Z2,\xe2\x80\xa6,ZLiZ_1, Z_2, \\ldots, Z_{L_i}Z1\xe2\x80\x8b,Z2\xe2\x80\x8b,\xe2\x80\xa6,ZLi\xe2\x80\x8b\xe2\x80\x8b\nthen for each valid jjj, Ada chose a variable Pi,jP_{i,j}Pi,j\xe2\x80\x8b as either XZjX_{Z_j}XZj\xe2\x80\x8b\xe2\x80\x8b or \xc2\xacXZj\\neg X_{Z_j}\xc2\xacXZj\xe2\x80\x8b\xe2\x80\x8b\nthe iii-th clause in the expression BBB had LiL_iLi\xe2\x80\x8b terms: Pi,1\xe2\x88\xa8Pi,2\xe2\x88\xa8\xe2\x80\xa6\xe2\x88\xa8Pi,LiP_{i,1} \\lor P_{i,2} \\lor \\ldots \\lor P_{i,L_i}Pi,1\xe2\x80\x8b\xe2\x88\xa8Pi,2\xe2\x80\x8b\xe2\x88\xa8\xe2\x80\xa6\xe2\x88\xa8Pi,Li\xe2\x80\x8b\xe2\x80\x8b\n\nAda wants the expression to evaluate to "true". In order to achieve that, she may change the values of variables; for each valid iii, the cost of changing the value of XiX_iXi\xe2\x80\x8b (from "true" to "false" or vice versa) is CiC_iCi\xe2\x80\x8b. Find the minimum total cost needed to make the expression BBB evaluate to "true" or determine that it is impossible.\nInput\n\nThe first line of the input contains a single integer TTT denoting the number of test cases. The description of TTT test cases follows.\nThe first line of each test case contains three space-separated integers NNN, MMM and KKK.\nThe second line contains a single binary string SSS with length NNN describing the initial values of the variables. For each valid iii, the iii-th character of SSS is \'1\' if XiX_iXi\xe2\x80\x8b is true or \'0\' if XiX_iXi\xe2\x80\x8b is false.\nThe third line contains NNN space-separated integers C1,C2,\xe2\x80\xa6,CNC_1, C_2, \\ldots, C_NC1\xe2\x80\x8b,C2\xe2\x80\x8b,\xe2\x80\xa6,CN\xe2\x80\x8b.\nMMM lines follow. For each valid iii, the iii-th of these lines contains an integer LiL_iLi\xe2\x80\x8b followed by a space and LiL_iLi\xe2\x80\x8b space-separated integers representing the variables Pi,1,\xe2\x80\xa6,Pi,LiP_{i,1}, \\ldots, P_{i,L_i}Pi,1\xe2\x80\x8b,\xe2\x80\xa6,Pi,Li\xe2\x80\x8b\xe2\x80\x8b. For each valid iii, the variable XiX_iXi\xe2\x80\x8b is represented by the integer iii and its negation is represented by \xe2\x88\x92i-i\xe2\x88\x92i.\n\nOutput\nFor each test case, print a single line containing one integer \xe2\x80\x95 the minimum cost needed to make the boolean expression evaluate to "true", or \xe2\x88\x921-1\xe2\x88\x921 if it is impossible.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa4101 \\le T \\le 101\xe2\x89\xa4T\xe2\x89\xa410\n1\xe2\x89\xa4N,M\xe2\x89\xa41441 \\le N, M \\le 1441\xe2\x89\xa4N,M\xe2\x89\xa4144\n3\xe2\x89\xa4K\xe2\x89\xa493 \\le K \\le 93\xe2\x89\xa4K\xe2\x89\xa49\neach character of SSS is either \'0\' or \'1\'\n1\xe2\x89\xa4Ci\xe2\x89\xa42561 \\le C_i \\le 2561\xe2\x89\xa4Ci\xe2\x80\x8b\xe2\x89\xa4256 for each valid iii\n1\xe2\x89\xa4Li\xe2\x89\xa4N1 \\le L_i \\le N1\xe2\x89\xa4Li\xe2\x80\x8b\xe2\x89\xa4N for each valid iii\n1\xe2\x89\xa4\xe2\x88\xa3Pi,j\xe2\x88\xa3\xe2\x89\xa4N1 \\le |P_{i,j}| \\le N1\xe2\x89\xa4\xe2\x88\xa3Pi,j\xe2\x80\x8b\xe2\x88\xa3\xe2\x89\xa4N for each valid i,ji,ji,j\n\nSubtasks\nSubtask #1 (25 points, time limit 1 second): K=3K = 3K=3\nSubtask #2 (75 points, time limit 6 seconds): original constraints\nSample 1:\nInputOutput1\n5 3 3\n00001\n1 4 2 3 7\n3 1 -2 4\n3 2 3 -5\n3 1 -3 23\nExplanation:\nExample case 1: The following figure depicts the graph used to generate the expression.\n\nThe boolean expression is B=(X1\xe2\x88\xa8\xc2\xacX2\xe2\x88\xa8X4)\xe2\x88\xa7(X2\xe2\x88\xa8X3\xe2\x88\xa8\xc2\xacX5)\xe2\x88\xa7(X1\xe2\x88\xa8\xc2\xacX3\xe2\x88\xa8X2)B = (X_1 \\lor \\neg X_2 \\lor X_4) \\land (X_2 \\lor X_3 \\lor \\neg X_5) \\land (X_1 \\lor \\neg X_3 \\lor X_2)B=(X1\xe2\x80\x8b\xe2\x88\xa8\xc2\xacX2\xe2\x80\x8b\xe2\x88\xa8X4\xe2\x80\x8b)\xe2\x88\xa7(X2\xe2\x80\x8b\xe2\x88\xa8X3\xe2\x80\x8b\xe2\x88\xa8\xc2\xacX5\xe2\x80\x8b)\xe2\x88\xa7(X1\xe2\x80\x8b\xe2\x88\xa8\xc2\xacX3\xe2\x80\x8b\xe2\x88\xa8X2\xe2\x80\x8b).\nOne optimal solution is to change the values of X1X_1X1\xe2\x80\x8b and X3X_3X3\xe2\x80\x8b.'