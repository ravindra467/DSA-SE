b'Problem\n\nBob likes trees and XOR (Exclusive OR) very much. So he created a tree with each edge having a weight associated with it.\nOne day his friend Alice came to his house, after playing video games for some time they got bored and decided to play something else. Bob showed the tree to Alice and told her that given any 2 vertices in the tree he can tell the XOR of all the weights on the unique path joining these 2 vertices. \nAlice thought it was a little easy and wanted to twist this a little bit. Now she proposed a different version involving q queries:\n\nEach query can be of 2 types.\n1 x y change the weight of xth edge to y.\n2 u v find the xor of the weights on the path joining vertices u and v.\n\nCan you help Bob solve this problem? For every query of 2nd type output the XOR value.\n\nInput\n\nFirst line will contain n the number of vertices in tree.\nNext n-1 lines contain description of the edges in the form ui vi wi denoting an edge between ui and vi with the weight wi.\nNext line contains q denoting number of queries.\nNext q lines contains queries as mentioned above.\n\nOutput\nFor each query of 2nd type output the XOR of the weights on the path from vertex u to v.\nConstraints\n\n1 <= n <= 105\n1 <= ui,vi <= n\n1 <= wi <= 109\n1 <= q <= 105\n1 <= x <= n-1\n1 <= y <= 109\n1 <= u,v <= n\n\nExample\nInput:\n5\n1 2 5\n1 3 4\n2 4 6\n4 5 7\n5\n1 1 4\n2 2 5\n2 3 4\n1 4 9\n2 1 5\nOutput:\n1\n6\n11\n'