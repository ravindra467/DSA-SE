b'Problem\nRead problems statements in Hindi, Mandarin Chinese, Russian, Vietnamese, and Bengali as well.\nThe notorious hacker group "Sed" managed to obtain a string SSS from their secret sources. The string contains only lowercase English letters along with the character \'?\'.\nA substring of SSS is a contiguous subsequence of that string. For example, the string "chef" is a substring of the string "codechef", but the string "codeh" is not a substring of "codechef".\nA substring of SSS is good if it is possible to choose a lowercase English letter CCC such that the following process succeeds:\n\nCreate a string RRR, which is a copy of the substring, but with each \'?\' replaced by the letter ccc. Note that all occurrences of \'?\' must be replaced by the same letter.\nFor each lowercase English letter:\n\nCompute the number of times it occurs in SSS and the number of times it occurs in RRR; let\'s denote them by AAA and BBB respectively. The \'?\' characters in the original string SSS are ignored when computing AAA.\nCheck the parity of AAA and BBB. If they do not have the same parity, i.e. one of them is even while the other is odd, then this process fails.\n\n\nIf the parities of the number of occurrences in SSS and RRR are the same for each letter, the process succeeds.\n\nFor different substrings, we may choose different values of CCC.\nHelp Sed find the number of good substrings in the string SSS.\nInput\n\nThe first line of the input contains a single integer TTT denoting the number of test cases. The description of TTT test cases follows.\nThe first and only line of each test case contains a single string SSS.\n\nOutput\nFor each test case, print a single line containing one integer \xe2\x80\x95 the number of good substrings.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa41051 \\le T \\le 10^51\xe2\x89\xa4T\xe2\x89\xa4105\n1\xe2\x89\xa4S\xe2\x89\xa41051 \\le S \\le 10^51\xe2\x89\xa4S\xe2\x89\xa4105\nSSS contains only lowercase English letters (\'a\' through \'z\') and \'?\'\nthe sum of \xe2\x88\xa3S\xe2\x88\xa3|S|\xe2\x88\xa3S\xe2\x88\xa3 over all test cases does not exceed 10510^5105\n\nSample 1:\nInputOutput5\naa?\na???\n????\nasfhaslskfak\naf??avvnfed?fav?faf????2\n6\n4\n2\n27\nExplanation:\nExample case 1: All letters occur an even number of times in SSS. The six substrings of SSS are "a", "a", "?", "aa", "a?" and "aa?" (note that "a" is counted twice). Which of them are good?\n\n"a" is not good as \'a\' occurs an odd number of times in this substring and there are no \'?\' to replace.\n"?" is also not good as replacing \'?\' by any letter causes this letter to occur in RRR an odd number of times.\n"aa" is a good substring because each letter occurs in it an even number of times and there are no \'?\' to replace.\n"a?" is also a good substring. We can replace \'?\' with \'a\'. Then, RRR is "aa" and each letter occurs in this string an even number of times. Note that replacing \'?\' e.g. with \'b\' would not work (RRR would be "ab", where both \'a\' and \'b\' occur an odd number of times), but we may choose the replacement letter CCC appropriately.\n"aa?" is not a good substring. For any replacement letter CCC, we find that CCC occurs an odd number of times in RRR.\n\nExample case 2: We especially note that "a???" is not a good substring. Since all \'?\' have to be replaced by the same character, we can only get strings of the form "aaaa", "abbb", "accc", etc., but none of them match the criteria for a good substring.\nExample case 3: Any substring with even length is good.'