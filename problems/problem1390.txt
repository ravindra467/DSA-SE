b"Problem\nChef has  NNN doggo (dogs) , Lets number them 111 to NNN.\nChef decided to build houses for each, but he soon realizes that keeping so many dogs at one place may be messy. So he decided to divide them into several groups called doggo communities. Let the total no. of groups be KKK . In a community, paths between pairs of houses can be made so that doggo can play with each other. But there cannot be a path between two houses of different communities for sure. Chef wanted to make maximum no. of paths such that the total path is not greater then KKK.\nLet\xe2\x80\x99s visualize this problem in an engineer's way :)\r\nThe problem is to design a graph with max edge possible such that the total no. of edges should not be greater than the total no. of connected components.\nINPUT FORMAT\n\nFirst line of each test case file contain TTT , denoting total number of test cases.\nithithith test case contain only one line with a single integer NNN , denoting the number of dogs(vertex)\n\nOUTPUT FORMAT\n\nFor each test case print a line with a integer , denoting the maximum possible path possible.\n\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa4100001 \\leq T \\leq 100001\xe2\x89\xa4T\xe2\x89\xa410000\n1\xe2\x89\xa4N\xe2\x89\xa41091 \\leq N \\leq 10^91\xe2\x89\xa4N\xe2\x89\xa4109\n\nSub-Tasks\n\n20Points20 Points20Points\n1\xe2\x89\xa4N\xe2\x89\xa41061 \\leq N \\leq 10^61\xe2\x89\xa4N\xe2\x89\xa4106\n\nSample Input\n1\n4\nSample Output\n2\nExplanation\n4 houses can be made with  like this:\ncommunity #1  : [1 - 2  ]\ncommunity #2 :  [3 - 4 ]\nor  [1 - 2 - 3]  , [ 4 ]\nIn both cases the maximum possible path is 2."