b'Problem\nRead problem statements in Hindi, Bengali, Mandarin Chinese, Russian, and Vietnamese as well.\nChef has a simple undirected graph with NNN vertices (numbered 111 through NNN) and MMM edges. He wants to divide it into KKK parts (subgraphs) for some integer KKK.\nFirst, Chef divides the vertices in the graph into KKK sets such that each vertex belongs to exactly one set; the subgraphs and sets are numbered 111 through KKK such that for each valid iii, vertices from the iii-th set belong to the iii-th subgraph. Then, Chef checks all the edges in the graph. For an edge connecting vertices uuu and vvv, if uuu and vvv are both in the iii-th set, then this edge belongs to the iii-th subgraph. Otherwise, this edge does not belong to any of these KKK subgraphs.\nAt the end, Chef checks these KKK subgraphs. If each subgraph contains an even number of edges, then Chef thinks that this way of dividing the graph is delicious.\nChef wants to divide the graph in a delicious way such that KKK is the smallest possible. Find the minimum KKK and one such way to divide the graph.\nInput\n\nThe first line of the input contains a single integer TTT denoting the number of test cases. The description of TTT test cases follows.\nThe first line of each test case contains two space-separated integers NNN and MMM.\nEach of the next MMM lines contains two space-separated integers uuu and vvv denoting that vertices uuu and vvv are connected by an edge.\n\nOutput\nFor each test case, print two lines. The first of these lines should contain a single integer \xe2\x80\x95 the minimum KKK. The second line should contain NNN space-separated integers, where for each valid iii, the iii-th integer denotes the subgraph that vertex iii belongs to.\nIf there are multiple solutions, you may output any one.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa43,0001 \\le T \\le 3,0001\xe2\x89\xa4T\xe2\x89\xa43,000\n1\xe2\x89\xa4M\xe2\x89\xa4100,0001 \\le M \\le 100,0001\xe2\x89\xa4M\xe2\x89\xa4100,000\n2\xe2\x89\xa4N\xe2\x89\xa4100,0002 \\le N \\le 100,0002\xe2\x89\xa4N\xe2\x89\xa4100,000\n1\xe2\x89\xa4u\xe2\x89\xa0v\xe2\x89\xa4N1 \\le u \\neq v \\le N1\xe2\x89\xa4u\xee\x80\xa0=v\xe2\x89\xa4N\nthe graph contains no duplicate edges or self-loops\nthe sum of NNN over all test cases does not exceed 10610^6106\nthe sum of MMM over all test cases does not exceed 10610^6106\n\nSubtasks\nSubtask #1 (30 pts): 2\xe2\x89\xa4N\xe2\x89\xa4102 \\le N \\le 102\xe2\x89\xa4N\xe2\x89\xa410\nSubtask #2 (70 pts): original constraints\nSample 1:\nInputOutput1\n5 5\n1 2\n1 3\n2 3\n2 4\n3 42\n1 2 1 1 2\nExplanation:\nExample case 1: Subgraph 111 contains vertices 111, 333, 444 and edges (1,3)(1,3)(1,3) and (3,4)(3,4)(3,4). Subgraph 222 contains vertices 222 and 555, but no edges.'