b'Problem\nA string consisting only of parentheses (\\verb+(+( and )\\verb+)+) is called a parentheses string. The balanced parentheses strings are defined recursively as follows:\n\nAn empty string is a balanced parentheses string.\nIf sss is a balanced parentheses string, then (s)\\verb+(+s\\verb+)+(s) is also a balanced parentheses string.\nIf sss and ttt are balanced parentheses strings, then ststst (concatenation of sss and ttt) is also a balanced parentheses string.\n\nFor a parentheses string, an operation on this string is defined as follows:\n\nChoose any substring of this string which is balanced.\nRemove this substring and concatenate the remaining parts.\n\nGiven a parentheses string SSS, find the minimum length of the string one can get by applying the above operation any number of times. Also find the minimum number of operations required to achieve this minimum length.\nInput Format\n\nThe first line of the input contains TTT, the number of test cases. Then the test cases follow.\nEach test case contains string SSS in a single line, which consists only of the characters (\\verb+(+( and )\\verb+)+).\n\nOutput Format\nFor each test case, in a single line output the minimum length of the string we can get by applying the given operation any number of times and the minimum number of operations required to achieve this minimum length separated by a single space.\nConstraints\n\n\n1\xe2\x89\xa4T\xe2\x89\xa41061 \\leq T \\leq 10^61\xe2\x89\xa4T\xe2\x89\xa4106\n1\xe2\x89\xa4\xe2\x88\xa3S\xe2\x88\xa3\xe2\x89\xa42\xe2\x8b\x851061 \\leq |S| \\leq 2 \\cdot 10^61\xe2\x89\xa4\xe2\x88\xa3S\xe2\x88\xa3\xe2\x89\xa42\xe2\x8b\x85106\nSum of \xe2\x88\xa3S\xe2\x88\xa3|S|\xe2\x88\xa3S\xe2\x88\xa3 over all test cases does not exceed 2\xe2\x8b\x851062 \\cdot 10^62\xe2\x8b\x85106.\n\n\nSample 1:\nInputOutput3\n(())\n)()(\n()(()\n0 1\n2 1\n1 2\n\nExplanation:\nTest Case 111: The given string is balanced and hence we can choose the whole string for the operation and remove it. So, the minimum length of the string we can achieve is equal to 000 and it requires a minimum of 111 operation to achieve this.\nTest Case 222: The only non-empty balanced substring of )()(\\verb+)()(+)()( is ()\\verb+()+(). By applying the operation once, the string changes to )(\\verb+)(+)(. This string has no non-empty balanced substring. Therefore, the minimum length of the string we can achieve is equal to 222 and it requires a minimum of 111 operation to achieve this.\nTest Case 333: Apply the operation on the string S=()(()S = \\verb+()(()+S=()(() by removing the substring S[1,2]=()S[1,2] = \\verb+()+S[1,2]=() to get (()\\verb+(()+((). Now, apply the operation by removing the substring ()\\verb+()+() to get (((. Therefore, the minimum length of the string we can achieve is equal to 111 and it requires a minimum of 222 operations to achieve this.'