b'Problem\nArun has a rooted tree of NNN vertices rooted at vertex 111. Each vertex can either be coloured black or white.\nInitially, the vertices are coloured A1,A2,\xe2\x80\xa6ANA_1, A_2, \\ldots A_NA1\xe2\x80\x8b,A2\xe2\x80\x8b,\xe2\x80\xa6AN\xe2\x80\x8b, where Ai\xe2\x88\x88{0,1}A_i \\in \\{0, 1\\}Ai\xe2\x80\x8b\xe2\x88\x88{0,1} denotes the colour of the iii-th vertex (here 000 represents white and 111 represents black). He wants to perform some operations to change the colouring of the vertices to B1,B2,\xe2\x80\xa6BNB_1, B_2, \\ldots B_NB1\xe2\x80\x8b,B2\xe2\x80\x8b,\xe2\x80\xa6BN\xe2\x80\x8b respectively.\nArun can perform the following operation any number of times. In one operation, he can choose any subtree and either paint all its vertices white or all its vertices black.\nHelp Arun find the minimum number of operations required to change the colouring of the vertices to B1,B2,\xe2\x80\xa6BNB_1, B_2, \\ldots B_NB1\xe2\x80\x8b,B2\xe2\x80\x8b,\xe2\x80\xa6BN\xe2\x80\x8b respectively.\nInput Format\n\nThe first line contains a single integer TTT \xe2\x80\x94 the number of test cases. Then the test cases follow.\nThe first line of each test case contains an integer NNN \xe2\x80\x94 the size of the tree.\nThe second line of each test case contains NNN space-separated integers A1,A2,\xe2\x80\xa6,ANA_1, A_2, \\dots, A_NA1\xe2\x80\x8b,A2\xe2\x80\x8b,\xe2\x80\xa6,AN\xe2\x80\x8b denoting the initial colouring of the vertices of the tree.\nThe third line of each test case contains NNN space-separated integers B1,B2,\xe2\x80\xa6,BNB_1, B_2, \\dots, B_NB1\xe2\x80\x8b,B2\xe2\x80\x8b,\xe2\x80\xa6,BN\xe2\x80\x8b denoting the final desired colouring of the vertices of the tree.\nThe next N\xe2\x88\x921N-1N\xe2\x88\x921 lines contain two space-separated integers uuu and vvv \xe2\x80\x94 denoting an undirected edge between nodes uuu and vvv.\n\nIt is guaranteed that the edges given in the input form a tree.\nOutput Format\nFor each testcase, output the minimum number of operations required to obtain the desired colouring.\nConstraints\n\n\n1\xe2\x89\xa4T\xe2\x89\xa42\xe2\x8b\x851041 \\leq T \\leq 2 \\cdot 10^41\xe2\x89\xa4T\xe2\x89\xa42\xe2\x8b\x85104\n1\xe2\x89\xa4N\xe2\x89\xa43\xe2\x8b\x851051 \\leq N \\leq 3 \\cdot 10^51\xe2\x89\xa4N\xe2\x89\xa43\xe2\x8b\x85105\nAi\xe2\x88\x88{0,1}A_i \\in \\{0, 1\\}Ai\xe2\x80\x8b\xe2\x88\x88{0,1}\nBi\xe2\x88\x88{0,1}B_i \\in \\{0, 1\\}Bi\xe2\x80\x8b\xe2\x88\x88{0,1}\n1\xe2\x89\xa4u,v\xe2\x89\xa4N1 \\leq u, v \\leq N1\xe2\x89\xa4u,v\xe2\x89\xa4N and u\xe2\x89\xa0vu \\neq vu\xee\x80\xa0=v\nIt is guaranteed that the edges given in the input form a tree.\nThe sum of NNN over all test cases does not exceed 3\xe2\x8b\x851053 \\cdot 10^53\xe2\x8b\x85105\n\n\nSample 1:\nInputOutput2\n4\n1 1 0 0\n1 1 1 0\n1 2\n1 3\n1 4\n5\n1 1 1 0 0\n1 0 1 1 1\n5 3\n3 1\n2 1\n4 31\n2\nExplanation:\nTest case 111: Arun can choose the subtree rooted at 333 and paint it black in one operation to achieve the desired colouring.\n![sample1_part1](https://s3.amazonaws.com/codechef_shared/download/Images/START41/sample1_pt1.png =200x200)\n\xe2\x86\x92\\rightarrow\xe2\x86\x92\n![sample1_part2](https://s3.amazonaws.com/codechef_shared/download/Images/START41/sample1_pt2.png =200x200)\nTest case 222: Consider the following sequence of operations.\n![sample2_part1](https://s3.amazonaws.com/codechef_shared/download/Images/START41/sample2_pt1.png =250x250)\nIn the first operation, choose the subtree rooted at 333 and paint it black.\n![sample2_part2](https://s3.amazonaws.com/codechef_shared/download/Images/START41/sample2_pt2.png =250x250)\nIn the second operation, choose the subtree rooted at 222 and paint it white.\n![sample2_part3](https://s3.amazonaws.com/codechef_shared/download/Images/START41/sample2_pt3.png =250x250)\nIt can be shown that the desired colouring cannot be obtained in fewer operations.'