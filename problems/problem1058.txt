b'Problem\nFor a binary string AAA, let f(A)f(A)f(A) denote its badness, defined to be the difference between the number of zeros and number of ones present in it. That is, if the string has c0c_0c0\xe2\x80\x8b zeros and c1c_1c1\xe2\x80\x8b ones, its badness is \xe2\x88\xa3c0\xe2\x88\x92c1\xe2\x88\xa3|c_0 - c_1|\xe2\x88\xa3c0\xe2\x80\x8b\xe2\x88\x92c1\xe2\x80\x8b\xe2\x88\xa3. For example, the badness of "010101" is \xe2\x88\xa31\xe2\x88\x921\xe2\x88\xa3=0|1 - 1| = 0\xe2\x88\xa31\xe2\x88\x921\xe2\x88\xa3=0, the badness of "100100100" is \xe2\x88\xa32\xe2\x88\x921\xe2\x88\xa3=1|2 - 1| = 1\xe2\x88\xa32\xe2\x88\x921\xe2\x88\xa3=1, the badness of "110111011101" is \xe2\x88\xa31\xe2\x88\x923\xe2\x88\xa3=2|1 - 3| = 2\xe2\x88\xa31\xe2\x88\x923\xe2\x88\xa3=2, and the badness of the empty string is \xe2\x88\xa30\xe2\x88\x920\xe2\x88\xa3=0|0 - 0| = 0\xe2\x88\xa30\xe2\x88\x920\xe2\x88\xa3=0.\nYou are given an integer NNN and a binary string SSS.\nYou would like to partition SSS into KKK disjoint subsequences (some of which may be empty), such that the maximum badness among all these KKK subsequences is minimized. Find this value.\nFormally,\n\nLet S1,S2,\xe2\x80\xa6,SKS_1, S_2, \\ldots, S_KS1\xe2\x80\x8b,S2\xe2\x80\x8b,\xe2\x80\xa6,SK\xe2\x80\x8b be a partition of SSS into disjoint subsequences. Every character of SSS must appear in one of the SiS_iSi\xe2\x80\x8b. Some of the SiS_iSi\xe2\x80\x8b may be empty.\nThen, find the minimum value of max\xe2\x81\xa1(f(S1),f(S2),\xe2\x80\xa6,f(SK))\\max(f(S_1), f(S_2), \\ldots, f(S_K))max(f(S1\xe2\x80\x8b),f(S2\xe2\x80\x8b),\xe2\x80\xa6,f(SK\xe2\x80\x8b)) across all possible choices of S1,S2,\xe2\x80\xa6,SKS_1, S_2, \\ldots, S_KS1\xe2\x80\x8b,S2\xe2\x80\x8b,\xe2\x80\xa6,SK\xe2\x80\x8b satisfying the first condition.\n\nInput Format\n\nThe first line of input will contain a single integer TTT, denoting the number of test cases.\nThe description of each test case is as follows:\n\nThe first line contains two space-separated integers\xc2\xa0NNN\xc2\xa0and KKK.\nThe second line contains\xc2\xa0the binary string SSS of length NNN.\n\n\n\nOutput Format\n\xe2\x80\x8bFor each test case,\xc2\xa0print the minimum possible value of the maximum badness when SSS is partitioned into KKK subsequences.\nConstraints\n\n\n1\xe2\x89\xa4T\xe2\x89\xa410001 \\leq T \\leq 10001\xe2\x89\xa4T\xe2\x89\xa41000\n1\xe2\x89\xa4N\xe2\x89\xa42\xe2\x8b\x851051 \\leq N \\leq 2 \\cdot 10^51\xe2\x89\xa4N\xe2\x89\xa42\xe2\x8b\x85105\n1\xe2\x89\xa4K\xe2\x89\xa41091 \\leq K \\leq 10^91\xe2\x89\xa4K\xe2\x89\xa4109\nSSS is a binary string, i.e, contains only the characters 000 and 111\nThe sum of NNN across all test cases doesn\'t exceed 2\xe2\x8b\x851052 \\cdot 10^52\xe2\x8b\x85105\n\n\nSample 1:\nInputOutput3\n7 5\n1010100\n4 1\n1100\n6 2\n1011111\n0\n2\nExplanation:\nTest case 111: Let\'s take a couple of examples.\n\nSuppose the partition is {"10","10","0","10","\xc2\xa0"}\\{"10", "10", "0", "10", "\\ "\\}{"10","10","0","10","\xc2\xa0"}, obtained as 1010100\\textcolor{red}{10}\\textcolor{blue}{10}\\textcolor{orange}{10}01010100 (elements of one color form a subsequence). The respective badness values are {0,0,1,0,0}\\{0, 0, 1, 0, 0\\}{0,0,1,0,0}, the maximum of which is 111.\nSuppose the partition is {"101","00","\xc2\xa0","10","\xc2\xa0"}\\{"101", "00", "\\ ", "10", "\\ "\\}{"101","00","\xc2\xa0","10","\xc2\xa0"}, obtained as 1010100\\textcolor{red}{10}10\\textcolor{red}{1}\\textcolor{blue}{00}1010100. The respective badness values are {1,2,0,0,0}\\{1, 2, 0, 0, 0\\}{1,2,0,0,0}, the maximum of which is 222.\n\nThe first partition, with a maximum badness of 111, is one of the optimal partitions.\nTest case 222: The only possible partition is {"1100"}\\{"1100"\\}{"1100"}, which has a badness of 000.\nTest case 333: The partitions {"1011","11"}\\{"1011", "11"\\}{"1011","11"} and {"0111","11"}\\{"0111", "11"\\}{"0111","11"} both lead to a badness of max\xe2\x81\xa1(2,0)=2\\max(2, 0) = 2max(2,0)=2, which is the minimum possible.'