b"Problem\nRead problem statements in Hindi, Bengali, Mandarin Chinese, Russian, and Vietnamese as well.\nThere are NNN points in a plane (numbered 111 through NNN). For each valid iii, the coordinates of the iii-th point are (Xi,Yi)(X_i,Y_i)(Xi\xe2\x80\x8b,Yi\xe2\x80\x8b).\nWe want to remove all the points one by one; you should choose the order in which they are removed.\nWhenever a point is removed, we compute the area of the convex hull of the remaining points. Then, we define a penalty PPP as twice the sum of all these areas. It can be proved that PPP is an integer.\nLet MMM be the penalty of an algorithm that always greedily chooses the point that minimises the area of the convex hull of the remaining points (if there is more than one such point, the point with the smallest XXX-coordinate is chosen; if there is still more than one point, then the point with the smallest YYY-coordinate is chosen). You are given this penalty. Your goal is to find a removal order that results in a smaller penalty.\nInput\n\nThe first line of the input contains a single integer NNN.\nNNN lines follow. For each valid iii, the iii-th of these lines contains two space-separated integers XiX_iXi\xe2\x80\x8b and YiY_iYi\xe2\x80\x8b.\nThe last line contains a single integer MMM.\n\nOutput\nPrint a single line containing NNN space-separated integers \xe2\x80\x95 a permutation of the integers 111 through NNN denoting the points in the order in which they should be removed.\nConstraints\n\nN=1024N = 1024N=1024\n0\xe2\x89\xa4Xi,Yi\xe2\x89\xa45120 \\le X_i, Y_i \\le 5120\xe2\x89\xa4Xi\xe2\x80\x8b,Yi\xe2\x80\x8b\xe2\x89\xa4512 for each valid iii\n\nExample Input\n6\n1 0\n0 0\n0 1\n1 2\n2 1\n1 1\n5\n\nExample Output\n5 2 3 1 4 6\n\nExplanation\nThe points 111 through 666 are marked A\\mathsf{A}A through F\\mathsf{F}F in the following figure.\n\n- After removing the point marked E\\mathsf{E}E, the convex hull of the remaining points is the quadrilateral ABCD\\mathsf{ABCD}ABCD.\n- After the points B\\mathsf{B}B and C\\mathsf{C}C are also removed, the remaining points A\\mathsf{A}A, F\\mathsf{F}F and D\\mathsf{D}D are collinear, so the convex hull has zero area.\nThe penalty PPP is 2\xe2\x8b\x85(3/2+1+0+0+0)=52 \\cdot (3/2+1+0+0+0) = 52\xe2\x8b\x85(3/2+1+0+0+0)=5.\nTest Generation\nThere are four groups of test files and two test files in each group.\n\nIn each file in group 1, the coordinates of all points are chosen uniformly randomly and independently between 111 and 512512512 inclusive.\nIn each file in group 2, the points are chosen in the following way:\n\nConsider the square SSS whose lower left corner is (0,0)(0,0)(0,0) and upper right corner is (512,512)(512, 512)(512,512).\nGenerate a set of points by repeating the following process:\n\nChoose two points PPP and QQQ with integer coordinates on the perimeter of SSS uniformly randomly.\nConsider all points with integer coordinates on the line segment PQ\\mathsf{PQ}PQ.\nSort these points first by non-decreasing XXX-coordinate and then by non-decreasing YYY-coordinate.\nAdd these points to the set, in this order.\n\n\nThe process stops as soon as the set contains NNN pairwise distinct points.\n\n\nIn each file in group 3, the points are generated similarly to group 2, but the points PPP and QQQ are always chosen uniformly randomly among all points with integer coordinates inside or on the perimeter of the square SSS.\nIn each file in group 4, the points are generated similarly to group 2, but PPP is always the point (256,256)(256,256)(256,256).\n\nScoring\nIf P>MP \\gt MP>M, you will receive the Wrong Answer verdict; otherwise, the score of a test file is M\xe2\x88\x92PM-PM\xe2\x88\x92P. The score of a submission is the sum of scores of all test files. Your goal is to maximise the score of your submission.\nThere are eight test files. During the contest, the displayed score will account for exactly one test file from each group, i.e. your score reflects your submission's performance on 50% (4/8) of the test files. However, if your program gets a non-AC verdict on any test file, your submission's verdict will be non-AC. In other words, an AC verdict denotes that your program runs successfully on all the test files. After the end of the contest, your score will be changed to include the sum of your program's scores over the other 4 test files."