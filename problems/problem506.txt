b"Problem\nAfter Danish's death, Faizal wants to take revenge against Ramadhir. However, he has run out of funds to buy new weapons and must somehow procure a large amount money to fund his revenge and buy guns.\nHe decides to rob the Bank of Wasseypur to get the funds. He has a friend who works as a security guard at the bank, from whom he learned the secret of the bank's safe.\nThe manager of the bank is a big fan of puzzles and is currently fascinated with bits. The manager takes a number and writes it out in binary format with KKK bits. He then rearranges the bits of the number however he likes. Recently, he has also started experimenting with the [bitwise XOR] (https://en.wikipedia.org/wiki/Exclusive_or) operation. This led him to come up with the following way of setting the code of the bank's safe:\nEach day he takes two numbers LLL and RRR. He then considers all the numbers between LLL and RRR, both endpoints included. The safe's code is set as the number of ways he can rearrange the bits in these numbers such that the bitwise XOR of all the resulting numbers is maximum. Since the safe code can only have upto 101010 digits, he divides the this number by 109+710^9 +7109+7 and uses the remainder as the code.\nAfter some bribery, the guard has also given Faizal a list of LLL, RRR and KKK, that the manager could have used to make the secret code. Can you help Faizal get the secret code for all of them?\nInput Format\n\nThe first line contains a single integer TTT, denoting the size of the list the guard gave Faizal.\nEach of the next TTT lines contains three space-separated integers L,RL, RL,R, and KKK.\n\nOutput Format\nFor each testcase, output in a single line the bank safe code modulo 109+710^9 + 7109+7.\nConstraints\n\n\n1\xe2\x89\xa4T\xe2\x89\xa451 \\leq T \\leq 51\xe2\x89\xa4T\xe2\x89\xa45\n2\xe2\x89\xa4K\xe2\x89\xa4302 \\leq K \\leq 302\xe2\x89\xa4K\xe2\x89\xa430\n2\xe2\x89\xa4L<R<2K2 \\leq L \\lt R \\lt 2^K2\xe2\x89\xa4L<R<2K\n\n\nSample 1:\nInputOutput3\n2 3 3\n3 5 3\n5 7 33\n6\n3\nExplanation:\nTest Case 1\n\nL=2L=2L=2, R=3R=3R=3, K=3K = 3K=3.\nNumbers between LLL and RRR are {2,3}\\{2, 3\\}{2,3}.\nIn binary, numbers are  {010,011}\\{010, 011\\}{010,011}\nMaximum possible XORXORXOR is 111111111\nWe can rearrange the bits in these numbers to achieve maximum XORXORXOR as\n\n{100,011}\\{100, 011\\}{100,011}\n{010,101}\\{010, 101\\}{010,101}\n{001,110}\\{001, 110\\}{001,110}\n\n\n\n\xc2\xa0\nTest Case 2\n\nL=3L=3L=3, R=5R=5R=5, K=3K = 3K=3.\nNumbers between LLL and RRR are {3,4,5}\\{3, 4, 5\\}{3,4,5}.\nIn binary, numbers are  {011,100,101}\\{011, 100, 101\\}{011,100,101}\nMaximum possible XORXORXOR is 111111111\nWe can rearrange the bits in these numbers to achieve maximum XORXORXOR as\n\n{011,001,101}\\{011, 001, 101\\}{011,001,101}\n{011,010,110}\\{011, 010, 110\\}{011,010,110}\n{101,001,011}\\{101, 001, 011\\}{101,001,011}\n{101,100,110}\\{101, 100, 110\\}{101,100,110}\n{110,010,011}\\{110, 010, 011\\}{110,010,011}\n{110,100,101}\\{110, 100, 101\\}{110,100,101}\n\n\n\n\xc2\xa0\nTest Case 3\n\nL=5L=5L=5, R=7R=7R=7, K=3K = 3K=3.\nNumbers between LLL and RRR are {5,6,7}\\{5, 6, 7\\}{5,6,7}.\nIn binary, numbers are  {101,110,111}\\{101, 110, 111\\}{101,110,111}\nMaximum possible XORXORXOR is 111111111\nWe can rearrange the bits in these numbers to achieve maximum XORXORXOR as\n\n{110,110,111}\\{110, 110, 111\\}{110,110,111}\n{101,101,111}\\{101, 101, 111\\}{101,101,111}\n{011,011,111}\\{011, 011, 111\\}{011,011,111}\n\n\n"