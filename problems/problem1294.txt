b"Problem\nRead problem statements in Hindi, Bengali, Mandarin Chinese, Russian, and Vietnamese as well.\nChef is very happy today because he got an offer from Gordon Ramsay himself to work for him in London. Chef wants to prepare a delicious cake for Gordon to impress him, but he does not know that Gordon Ramsay is not easy to impress.\nGordon cut Chef's cake into NNN small slices (numbered 111 through NNN), placed in a row in such a way that for each valid iii, slices iii and i+1i+1i+1 are adjacent. Note that slices NNN and 111 are not adjacent. For each valid iii, the iii-th slice has taste AiA_iAi\xe2\x80\x8b. Gordon wants to put special toppings on some slices and then ask Chef to group all slices into KKK clusters in such a way that the slices in each cluster form a contiguous sequence and the sweetness of the cake is maximum possible.\nFor each valid iii, let's denote the topping on the iii-th slice by tit_iti\xe2\x80\x8b (ti=0t_i = 0ti\xe2\x80\x8b=0 if there is no topping on this slice); the sweetness of this slice is ti\xe2\x8b\x85Ait_i \\cdot A_iti\xe2\x80\x8b\xe2\x8b\x85Ai\xe2\x80\x8b, so the sweetness of a slice without any special topping is 000.\nThe sweetness of a cluster is the total (summed up) sweetness of all slices in this cluster. Let's denote the sweetnesses of all clusters by S1,S2,\xe2\x80\xa6,SKS_1, S_2, \\ldots, S_KS1\xe2\x80\x8b,S2\xe2\x80\x8b,\xe2\x80\xa6,SK\xe2\x80\x8b. The sweetness of the whole cake is computed as S1\xe2\x88\x97S2\xe2\x88\x97\xe2\x80\xa6\xe2\x88\x97SKS_1 * S_2 * \\ldots * S_KS1\xe2\x80\x8b\xe2\x88\x97S2\xe2\x80\x8b\xe2\x88\x97\xe2\x80\xa6\xe2\x88\x97SK\xe2\x80\x8b, where the operation \xe2\x88\x97*\xe2\x88\x97 is defined in the following way: for any non-negative integers xxx and yyy such that x\xe2\x89\xa5yx \\ge yx\xe2\x89\xa5y,\nx\xe2\x88\x97y=y\xe2\x88\x97x=\xe2\x88\x91n=0\xe2\x8c\x8alog\xe2\x81\xa12(x)\xe2\x8c\x8b2n(\xe2\x8c\x8ax2n\xe2\x8c\x8b\xe2\x80\x8amod\xe2\x80\x8a2)(\xe2\x8c\x8ay2n\xe2\x8c\x8b\xe2\x80\x8amod\xe2\x80\x8a2)\xe2\x80\x89.x * y = y * x = \\sum_{n=0}^{\\lfloor\\log_2(x)\\rfloor} 2^n\\left(\\left\\lfloor\\frac{x}{2^n}\\right\\rfloor \\bmod 2\\right)\\left(\\left\\lfloor\\frac{y}{2^n}\\right\\rfloor \\bmod 2\\right) \\,.x\xe2\x88\x97y=y\xe2\x88\x97x=\xe2\x88\x91n=0\xe2\x8c\x8alog2\xe2\x80\x8b(x)\xe2\x8c\x8b\xe2\x80\x8b2n(\xe2\x8c\x8a2nx\xe2\x80\x8b\xe2\x8c\x8bmod2)(\xe2\x8c\x8a2ny\xe2\x80\x8b\xe2\x8c\x8bmod2).\nIt can be proven that this operation is associative, i.e. (x\xe2\x88\x97y)\xe2\x88\x97z=x\xe2\x88\x97(y\xe2\x88\x97z)(x * y) * z = x * (y * z)(x\xe2\x88\x97y)\xe2\x88\x97z=x\xe2\x88\x97(y\xe2\x88\x97z).\nYou should answer QQQ queries. In each query, you are given the toppings on all slices and the number of clusters KKK. Tell Chef the maximum possible sweetness of the cake!\nInput\n\nThe first line of the input contains a single integer NNN.\nThe second line contains NNN space-separated integers A1,A2,\xe2\x80\xa6,ANA_1, A_2, \\ldots, A_NA1\xe2\x80\x8b,A2\xe2\x80\x8b,\xe2\x80\xa6,AN\xe2\x80\x8b.\nThe next line contains a single integer QQQ.\nFor each query, two lines follow. The first of these lines contains a single integer KKK. The second line contains NNN space-separated integers t1,t2,\xe2\x80\xa6,tNt_1, t_2, \\ldots, t_Nt1\xe2\x80\x8b,t2\xe2\x80\x8b,\xe2\x80\xa6,tN\xe2\x80\x8b.\n\nOutput\nPrint a single line containing one integer \xe2\x80\x94 the maximum sweetness.\nConstraints\n\n1\xe2\x89\xa4Q\xe2\x89\xa4101 \\le Q \\le 101\xe2\x89\xa4Q\xe2\x89\xa410\n1\xe2\x89\xa4N\xe2\x89\xa41051 \\le N \\le 10^51\xe2\x89\xa4N\xe2\x89\xa4105\n1\xe2\x89\xa4K\xe2\x89\xa41051 \\le K \\le 10^51\xe2\x89\xa4K\xe2\x89\xa4105\n1\xe2\x89\xa4Ai\xe2\x89\xa410151 \\le A_i \\le 10^{15}1\xe2\x89\xa4Ai\xe2\x80\x8b\xe2\x89\xa41015 for each valid iii\n0\xe2\x89\xa4ti\xe2\x89\xa4100 \\le t_i \\le 100\xe2\x89\xa4ti\xe2\x80\x8b\xe2\x89\xa410 for each valid iii\nin each query, the number of slices with toppings does not exceed 505050\n\nSubtasks\nSubtask #1 (100 points): original constraints\nSample 1:\nInputOutput10\n15 5 26 4 3 13 5 5 27 11\n2\n3\n2 3 1 4 7 1 5 1 1 1\n1\n0 0 0 0 0 0 0 1 0 033\n5\nExplanation:\nFor the first query, Chef can choose clusters in the following way: cluster 111 contains slices 111 and 222, cluster 222 contains slices 333 through 777 and cluster 333 contains slices 888 through 101010. The sweetness of the cake is (15\xe2\x8b\x852+5\xe2\x8b\x853)\xe2\x88\x97(26\xe2\x8b\x851+4\xe2\x8b\x854+3\xe2\x8b\x857+13\xe2\x8b\x851+5\xe2\x8b\x855)\xe2\x88\x97(5\xe2\x8b\x851+27\xe2\x8b\x851+11\xe2\x8b\x851)=33(15 \\cdot 2 + 5 \\cdot 3) * (26 \\cdot 1 + 4 \\cdot 4 + 3 \\cdot 7 + 13 \\cdot 1 + 5 \\cdot 5) * (5 \\cdot 1 + 27 \\cdot 1 + 11 \\cdot 1) = 33(15\xe2\x8b\x852+5\xe2\x8b\x853)\xe2\x88\x97(26\xe2\x8b\x851+4\xe2\x8b\x854+3\xe2\x8b\x857+13\xe2\x8b\x851+5\xe2\x8b\x855)\xe2\x88\x97(5\xe2\x8b\x851+27\xe2\x8b\x851+11\xe2\x8b\x851)=33."