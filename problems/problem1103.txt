b'Problem\nJalebi Bai has two decks of sweets. These decks are represented by two strings s and t consisting of lowercase letters from the English alphabet. Each letter from \'a\' to \'z\' denotes a single type of sweet, e.g., \xe2\x80\x98b\xe2\x80\x99 denotes Barfi, \'r\' denotes Rasgulla, etc. She wants to use these decks in her friend Laddu\xe2\x80\x99s marriage. Instead of graciously accepting the gift, Laddu asks Jalebi Bai to first make the two decks exactly the same, so that they look good while serving. Now Jalebi Bai can apply the following operation as many times as she wants on both the decks.\n\n\nFrom a single deck, pick any two consecutive sweets of the same type and eat one of them. e.g., if a deck is "rrrjj", she can change it to "rrrj" by picking the last two sweets of type \'j\' (Jalebi) and eating one of them, or she can change the deck to "rrjj" by  picking up the first two sweets of type \xe2\x80\x98r\xe2\x80\x99 and eating one of them.\n\n\n\n\nYou need to tell whether Jalebi Bai can make the decks equal by applying the above operation as many times as she wants. Output "Yes" [without quotes] if she can, otherwise output "No" [without quotes].\n\nInput\nThe first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.\nThe first line of each test case contains a string s.\nThe second line of each test case contains a string t.\nOutput\nFor each test case, output "Yes" [without quotes] or "No" [without quotes] depending on the case.\nConstraints\n\n1 \xe2\x89\xa4 T \xe2\x89\xa4 50\nEach character of s, t will be between \'a\' and \'z\'.\n1 \xe2\x89\xa4 length of string s \xe2\x89\xa4 50\n1 \xe2\x89\xa4 length of string t \xe2\x89\xa4 50\n\nExample\nInput:\n2\nrrrjj\nrrrj\nrj\njr\nOutput:\nYes\nNo\n\nExplanation\nIn the first example, \nJalebi Bai can change the first deck from "rrrjj" to "rrrj" in a single operation, then both the decks will be equal. Example taken from the statements.\nIn the second example, \nJalebi Bai can never make both decks of sweets equal.\n'