b'Problem\n\nProblem description\n\nWe have already studied about many sorting techniques such as Insertion sort, Bubble sort, Selection sort, Quick sort, Merge sort, Heap sort etc. Here I will talk about a different type of sorting technique which is called as \xe2\x80\x9cRadix Sort\xe2\x80\x9d and is probably the best sorting technique as far as time complexity is concerned.\nOperations which are performed in Radix Sort is as follows:-\n1) Do following for each digit i where i varies from least significant digit to the most significant digit.\n\xe2\x80\xa6\xe2\x80\xa6\xe2\x80\xa6\xe2\x80\xa6.a) Sort input array using counting sort (or any stable sort) according to the i\xe2\x80\x99th digit.\nExample\nOriginal Unsorted List170, 45, 75, 90, 802, 24, 2, 66\nSorting by least significant digit (1s place) gives: [*Notice that we keep 802 before 2, because 802 occurred before 2 in the original list, and similarly for pairs 170 & 90 and 45 & 75.] 170, 90, 802, 2, 24, 45, 75, 66\nSorting by next digit (10s place) gives: [*Notice that 802 again comes before 2 as 802 comes before 2 in the previous list.]\n802, 2, 24, 45, 66, 170, 75, 90\nSorting by most significant digit (100s place) gives:\n2, 24, 45, 66, 75, 90, 170, 802\nHence we get a sorted sequence for the corresponding random sequence.\nFor a given set of N random numbers, generate a sorted (non-decreasing order) sequence using above discussed technique\nInput\nFirst line of input will consist of a single integer N denoting the size of the sequence.\nSecond line will consist of N space separated random integers.\nOutput\nPrint the sorted sequence of N numbers from the given sequence.\nConstraints\n1<=N<=100000\n0<=A[i] <=1000000000\n\nExample\nInput:\n5\n4 3 1 10 6\nOutput:\n1 3 4 6 10\nInput\n8\n170 45 75 90 802 24 2 66\nOutput\n2 24 45 66 75 90 170 802\n\xc2\xa0\nExplanation\nExample 2 is explained in the problem statement'