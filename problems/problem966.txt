b'Problem\nTinder is a dating app that is trying out a new way of making people interact face to face. It allows its users to opt in to this new way of dating and maintains a list of the gender of the users who are willing to participate in the order they opt in. Assume we have males and females represented by MMM and FFF respectively.\nNow, to make the interaction as effective as possible, they want to divide the people into as small groups as possible keeping the number of males and females equal in every group. Also, they must keep the groups contiguous as they are in the list. So they can not pick people from random places in the list and put them in a group, instead, they should create divisions in the list to make the group. Note that each person should be part of at-least 111 and only 111 group.\nYour job, as their software engineer, is to find out what is the maximum number of such groups formed. It is guaranteed that one such grouping will always exist.\n\n### Input:\n- The first line contains an integer TTT which is the number of test cases.\n- The first line of each test case has an integer NNN denoting the number of people that opted in.\n- The second line has a string of length NNN which contains the list of people.\n\n### Output:\nFor each testcase, output a single integer in new line denoting the number of maximum groups formed.\n\n### Constraints \n- 1\xe2\x89\xa4T\xe2\x89\xa41001 \\leq T \\leq 1001\xe2\x89\xa4T\xe2\x89\xa4100\n- 1\xe2\x89\xa4N\xe2\x89\xa41051 \\leq N \\leq 10^51\xe2\x89\xa4N\xe2\x89\xa4105\n- N%2=0N \\% 2=0N%2=0\n- Number of MMM is equal to number of FFF\n\n### Subtasks\nSubtask #1 (100 points): Original constraints\n\n### Sample Input:\n\t2\n\t6\n\tMFMFMF\n\t8\n\tMMFFMFFM\n\n### Sample Output:\n\t3\n\t3\n\n### EXPLANATION:\n- First case: MF, MF, MF.\n- Second case: MMFF, MF, FM '