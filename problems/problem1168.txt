b"Problem\nAlice is taking a cryptography class and finding anagrams to be very useful. We consider two strings to be anagrams of each other if the first string's letters can be rearranged to form the second string. In other words, both strings must contain the same exact letters in the same exact frequency For example, bacdc and dcbac are anagrams, but bacdc and dcbad are not.\nAlice decides on an encryption scheme involving two large strings where encryption is dependent on the minimum number of character deletions required to make the two strings anagrams. Can you help her find this number?\nGiven two strings, aaa and bbb, that may or may not be of the same length, determine the minimum number of character deletions required to make aaa and bbb anagrams. Any characters can be deleted from either of the strings.\nInput:\n\nThe first line contains a single string, aaa.\nThe second line contains a single string, bbb.\n\nOutput:\nPrint a single integer denoting the number of characters you must delete to make the two strings anagrams of each other.\nConstraints\n\n1\xe2\x89\xa4Length\xc2\xa0of\xc2\xa0a\xc2\xa0and\xc2\xa0b\xe2\x89\xa410001 \\leq \\text{Length of a and b} \\leq 10001\xe2\x89\xa4Length\xc2\xa0of\xc2\xa0a\xc2\xa0and\xc2\xa0b\xe2\x89\xa41000\nThe\xc2\xa0strings\xc2\xa0a\xc2\xa0and\xc2\xa0b\xc2\xa0consist\xc2\xa0of\xc2\xa0lowercase\xc2\xa0English\xc2\xa0alphabetic\xc2\xa0letters\xc2\xa0ascii[a-z]\\text{The strings a and b consist of lowercase English alphabetic letters ascii[a-z]}The\xc2\xa0strings\xc2\xa0a\xc2\xa0and\xc2\xa0b\xc2\xa0consist\xc2\xa0of\xc2\xa0lowercase\xc2\xa0English\xc2\xa0alphabetic\xc2\xa0letters\xc2\xa0ascii[a-z].\n\nSample Input:\ncde\nabc\nSample Output:\n4\n### EXPLANATION:\nWe delete the following characters from our two strings to turn them into anagrams of each other:\n\nRemove d and e from cde to get c.\nRemove a and b from abc to get c.\n\nWe must delete 444 characters to make both strings anagrams, so we print 444 on a new line."