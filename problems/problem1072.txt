b'Problem\n Read problems statements in Mandarin Chinese, Russian and Vietnamese as well.\n\nOne day, Chef prepared D brand new dishes. He named the i-th dish by a string Si. After the cooking, he decided to categorize each of these D dishes as special or not.\n\n\nA dish Si is called special if it\'s name (i.e. the string Si) can be represented in the form of a double string by removing at most one (possibly zero) character from it\'s name from any position. \n\n\nA string is called a double string if it can be represented as a concatenation of two identical, non-empty strings. \ne.g. "abab" is a double string as it can be represented as "ab" + "ab" where + operation denotes concatenation. \nSimilarly, "aa", "abcabc" are double strings whereas "a", "abba", "abc" are not.\n\nInput\n\nFirst line of the input contains an integer D denoting the number of dishes prepared by Chef on that day.\nEach of the next D lines will contain description of a dish. \n\t\nThe i-th line contains the name of i-th dish Si.\n \t\n\nOutput\nFor each of the D dishes, print a single line containing "YES" or "NO" (without quotes) denoting whether the dish can be called as a special or not.\nConstraints\n\n1 \xe2\x89\xa4 D \xe2\x89\xa4 106\n1 \xe2\x89\xa4 |Si| \xe2\x89\xa4 106.\nEach character of string Si will be lower case English alphabet (i.e. from \'a\' to \'z\').\n\nSubtasks\n\nSubtask #1 : (20 points)\n\nSum of |Si| in an input file doesn\'t exceed 2 * 103\n\n\n\nSubtask 2 : (80 points) \n\nSum of |Si| in an input file doesn\'t exceed 2 * 106\n\n\nSample 1:\nInputOutput3\naba\nabac\nabcdYES\nNO\nNO\nExplanation:\nExample case 1.\nWe can remove the character at position 1 (0-based index) to get "aa" which is a double string. Hence, it is a special dish.\n\nExample case 2.\nIt is not possible to remove the character at any of the position to get the double string. Hence, it is not a special dish.\n'