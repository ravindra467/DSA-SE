b'Problem\n Read problems statements in Mandarin Chinese and Russian as well.\n\xc2\xa0\nMisha likes playing DotA and he would do nothing else but play it if he could. Unfortunately for Misha, real life is rough and he has to solve following problem before spending a day playing. \nYou are given a rooted tree with N vertices. Vertices are numerated from 1 to N and vertex 1 is the root of the tree. A positive integer Wi is assigned to every node. Consider following code:\n\nInteger sum := 0;\nArray of boolean marked := {false, false, false, ..., false};\nProcedure Dfs(Integer v)\n    Begin\n        sum := sum + Wv;\n        marked[sum] := true;\n        For each node u that v is a parent of u do\n            Begin\n                Dfs(u);\n            End;\n    End;\n\nOne can notice that the state of marked[] array depends on the order vertices u processed. You are to check for every integer number s from 1 to the sum of Wi whether there exists some order of viewing children in Dfs that marked[s] = true.  Note that marked[] and sum are global variables and Dfs(1) is initially called.\n\n\xc2\xa0\nInput\nThe first line contains integer N \xe2\x80\x94 the number of vertices in given tree. N integers Wi follow in the next line. Then N-1 lines follow, ith of them contains a parent of vertex i+1. \n\xc2\xa0\nOutput\nLet S be the sum over all Wi. You should output S characters ith of which should be equal to 1 if it is possible to get marked[i] = true and 0 otherwise. Have a look at the example for better understanding. \nConstraints\n\n1 \xe2\x89\xa4 N \xe2\x89\xa4 500\n1 \xe2\x89\xa4 sum of all Wi \xe2\x89\xa4 100000\n1 \xe2\x89\xa4 Wi \xe2\x89\xa4 100000\n If  u  is the parent of vertex v  then  u   < v\n\n\xc2\xa0\nExample\nInput:\n5\n1 7 7 2 4\n1\n1\n2\n4\nOutput:\n100000010100011010001\n\n\xc2\xa0'