b'Problem\nYou are given a binary string SSS of length NNN. You can perform the following operation on SSS:\n\nPick any set of indices such that no two picked indices are adjacent.\nFlip the values at the picked indices (i.e. change 000 to 111 and 111 to 000).\n\nFor example, consider the string S=1101101S = 1101101S=1101101.\nIf we pick the indices {1,3,6}\\{1,3,6\\}{1,3,6}, then after flipping the values at picked indices, we will get 1\xe2\x80\xbe10\xe2\x80\xbe110\xe2\x80\xbe1\xe2\x86\x920111111 \\underline{1}1\\underline{0}11\\underline{0}1 \\rightarrow 01111111\xe2\x80\x8b10\xe2\x80\x8b110\xe2\x80\x8b1\xe2\x86\x920111111.\nNote that we cannot pick the set {2,3,5}\\{2,3,5\\}{2,3,5} since 222 and 333 are adjacent indices.\nFind the minimum number of operations required to convert all the characters of SSS to 000.\nInput Format\n\nThe first line contains a single integer TTT - the number of test cases. Then the test cases follow.\nThe first line of each test case contains an integer NNN - the length of the binary string SSS.\nThe second line of each test case contains a binary string SSS of length NNN.\n\nOutput Format\nFor each test case, output the minimum number of operations required to convert all the characters of SSS to 000.\nConstraints\n\n\n1\xe2\x89\xa4T\xe2\x89\xa41001 \\leq T \\leq 1001\xe2\x89\xa4T\xe2\x89\xa4100\n1\xe2\x89\xa4N\xe2\x89\xa41001 \\leq N \\leq 1001\xe2\x89\xa4N\xe2\x89\xa4100\n\n\nSample 1:\nInputOutput3\n6\n101001\n5\n00000\n3\n111\n1\n0\n2\n\nExplanation:\nTest Case 111: Pick the set of indices {1,3,6}\\{1, 3, 6\\}{1,3,6}. On flipping the values at these indices, the string becomes 000000000000000000.\nTest Case 222: The string already has all characters equal to 000.'